{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/images/article01/70321.png","path":"images/article01/70321.png","modified":1,"renderable":0},{"_id":"source/images/article01/70521.png","path":"images/article01/70521.png","modified":1,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/my_bg_color.css","path":"css/my_bg_color.css","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/bg_moon.png","path":"img/bg_moon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_drafts/Ubuntu 22.04详细安装教程及使用技巧.md","hash":"538550d3705bc41ceae854edb4bd45e8635f797f","modified":1702864553300},{"_id":"source/_drafts/hello-world.md","hash":"61339bf0b82182703fc09c17ea375857c46651fe","modified":1702812032613},{"_id":"source/_drafts/测试文章.md","hash":"395fbc075ed89363ffdbef9a096ac3af15b87ff6","modified":1702862654834},{"_id":"source/_posts/GitHub Pages + Hexo 搭建个人博客网站.md","hash":"da3693b26fbb7ea248a16ec402b9f8327f17cf87","modified":1702977598198},{"_id":"source/about/index.md","hash":"58d485aeb24b667c7145eadc4039b19649938c2a","modified":1702818002362},{"_id":"source/categories/index.md","hash":"d1f8264f3590da5f99a83733b9064120d953af53","modified":1702808082057},{"_id":"source/tags/index.md","hash":"6650e7e89aded78c07253272fef17031030d3d40","modified":1702802403952},{"_id":"source/_drafts/测试文章/avatar.jpg","hash":"ba9efac8b44d3c807e5cbfab17fa54fe00e73687","modified":1701747026536},{"_id":"source/images/article01/70321.png","hash":"47126de5d77d013f672829dbcb0f73a38fc3a8ab","modified":1702976622191},{"_id":"source/images/article01/70521.png","hash":"9be6668bf9d5ace676c424cfc97652e78e5b26b1","modified":1702976735715},{"_id":"source/google5db6829ba3bda531.html","hash":"7475d146fad5f7ba2ef2cc72e312acfdd443e150","modified":1702979792040},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1700815386000},{"_id":"themes/butterfly/README_CN.md","hash":"148da187d16033624ceccce8b8561835296f5a5a","modified":1700815386000},{"_id":"themes/butterfly/README.md","hash":"4e01b47448d9f3a02afc04eef644e2321253f6f4","modified":1700815386000},{"_id":"themes/butterfly/_config.yml","hash":"d1743c80bec403fa2cf1f8acd92fb7429a9acb5d","modified":1702817222627},{"_id":"themes/butterfly/plugins.yml","hash":"3b3b5fa56c0211a52530a99a69137027245c21b0","modified":1700815386000},{"_id":"themes/butterfly/package.json","hash":"806ede300bb0d8a12b23af1d64a639ad09cb29f9","modified":1700815386000},{"_id":"themes/butterfly/languages/default.yml","hash":"90a6dc361de67532437d819a55ec64945ca5404b","modified":1700815386000},{"_id":"themes/butterfly/languages/en.yml","hash":"af5603b1a888f167dc80be6d53a19437b5cf6bef","modified":1700815386000},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"5004faee365139521f161babd66649a8107e4008","modified":1700815386000},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"03629d1d13a7be09d4933aa5dc0dcbe45e79140c","modified":1700815386000},{"_id":"themes/butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1700815386000},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1700815386000},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1700815386000},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1700815386000},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1700815386000},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1700815386000},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7b4831ae8f8f8c55dd1b856781210c517c63e6dd","modified":1700815386000},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1700815386000},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"6e34b565ea013812d5e363b6de5fa1f9078d4e12","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1700815386000},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1700815386000},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ecec62305aaa596bb1dfbb46c13d06fb5a9628cf","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"db275f7fbe4438b54cd813b695f4834e10aa234f","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1700815386000},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1700815386000},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1700815386000},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1700815386000},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"351df17e06bb5c5788cd36105ecaa849d43edcce","modified":1700815386000},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1700815386000},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"e196a99733d7f90899bceed5d12488e8234817d5","modified":1700815386000},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1700815386000},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1700815386000},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1700815386000},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1700815386000},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1700815386000},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"7caf549810f971c34196fb9deac2d992545bdff9","modified":1700815386000},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"d5c7e61257b08a9648404f6f48ce4d471cd5fa55","modified":1700815386000},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1700815386000},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"e2a8a09bfe47da26eab242a36f516e6c452c799a","modified":1700815386000},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"418684993a3a3a2ac534257a2d9ecbcead6808c1","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"19773218877281ccffed921431e87148413a7c20","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"ffc62222f8d7b4d44c1c0726c8a08824a2201039","modified":1700815386000},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1700815386000},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1700815386000},{"_id":"themes/butterfly/source/css/var.styl","hash":"152b6bd4b6285165541a71f5a1c913f8ee6a602b","modified":1700815386000},{"_id":"themes/butterfly/source/css/my_bg_color.css","hash":"c6b2feff6941bd9463a889b4ddaff65de6d4b1ec","modified":1702807005703},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1700815386000},{"_id":"themes/butterfly/source/img/avatar.jpg","hash":"ba9efac8b44d3c807e5cbfab17fa54fe00e73687","modified":1701747026536},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1700815386000},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1700815386000},{"_id":"themes/butterfly/source/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1700815386000},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1700815386000},{"_id":"themes/butterfly/source/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"63fed4548367a3663cdbaffa1df48167b0a2397b","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"a5c7d362ae63474c1a4e3eb5cd09804b3684e984","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"50d1b08367f709e5416140043933e79cd8d77559","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"12e57491e94fa00d953bbda9db0b6d6169e2358c","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"3ec354778f6a4ac97fb64d5629c83b293ccceb5e","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1700815386000},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f19694a42dbe28eda4b39a1696e8fbcd277bc76c","modified":1700815386000},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c8ff6ddd5bfe1190b7b8056b68ce41114fd79dcb","modified":1700815386000},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"4dcd468e4d11a0ac75406162678feffcd89fee00","modified":1700815386000},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"fad650f88778b33a6358e38cf50dfafc0974d28f","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"029eebbdcb3c682780d1de629fa06858cbe9782b","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"ef0fd5e3fe04a50e4386bb3f22e2ccd9290c6653","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d6cf26ffb8a0343eda1cde65b6b73b0ddbe8fcfc","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"f845b9b4efdee750f70c023aab27432611f83059","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"b7a6a585dbc38d177c9aba75df3a467415d0488a","modified":1700815386000},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1700815386000},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0db591a1f4ed5adcb8668a549bbee5c9d62682cf","modified":1700815386000},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"e549d24ad81a7d93326a509ff8dcfcc58c80729e","modified":1700815386000},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1700815386000},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1700815386000},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1700815386000},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1700815386000},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1700815386000},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d4ebc41b5c855dd75f47de7345d62f85ce7cf073","modified":1700815386000},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1700815386000},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1700815386000},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1700815386000},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"961589da3c0a532c4709a4a4ea96bd579257f766","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"5cddbb5f4eae695a26685e415d821b523e0f17bf","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"2d02e52b360f6e6cae47c293ae57ed78e2554663","modified":1700815386000},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1700815386000},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1700815386000},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1700815386000},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"f7299f9fef5bf94bb58c8cd3be8ee660ad2f9cd4","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5d5b73920843ce858df6e3b03325d5d1f43cdab3","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"3bc4c1b91568561f0491bdac65b75aa0bfd01f27","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"46aec6466959baec1c3d71a5dbc510fbeb00c91d","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"2d7b0b09678adba09481e3152e0b32962677f650","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0d378ee8a671982a46213a4bfb223b4f3409aea9","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"894bf60ff5170cf1e4f276a8cedaf8301bceb824","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1995a654ba7ad62775a0a6e2922209cd1a85f2e3","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"46865e3f52096acb07d0212174b4e8751b123aea","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"ad7f1ee2e67deee0706e0838b5724dd37fc30a34","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6b67982bb7a3713b5bffd6a23ba2810425c504d0","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"9a3617f5e90c4e4176aa2ee2e904c22466e9663b","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"2609bc2656aaaa9b59e8d575e711776512a62192","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e434bcfb7fee59c7be2dac58a9b3a1989f21caa8","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"de2c4d02b520dd49a0a59fc0f33295e5bbb2c624","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"4104f96faa6040f111ebfb9a90eeb470857c3b86","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"1f9f51023e9e33081c2add2ca73643c0edc5e9d5","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"24804ab6da9727ed793655c1262fa3f1a9746f70","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"b928be14d1b47a9fadb1bcc5f5072a7328752d4b","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3335024ba91f55ccf3858571b7898f46881c455c","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"3ba49cfe186e9ca05faf9f0d0113611ec47e9b38","modified":1700815386000},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1700815386000},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1700815386000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1700815386000},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1700815386000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"25914321762e30aacc610bc4dfb9de3e1cb556a3","modified":1700815386000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1700815386000},{"_id":"themes/butterfly/source/img/bg_moon.png","hash":"21cb110e33141cfda16825678195cee97d0367f7","modified":1702806135432},{"_id":"public/search.xml","hash":"236036f422df0bd01475cd5a64032518046a7c27","modified":1702980104368},{"_id":"public/google5db6829ba3bda531.html","hash":"e2118aab28459047ee6434788219941df83443a7","modified":1702980104368},{"_id":"public/categories/index.html","hash":"9ae5026328cb27a45768d5da47bf6c265aed0d00","modified":1702980104368},{"_id":"public/tags/index.html","hash":"755f0bc273a4efdbc99cb90c971d78f199b70baf","modified":1702980104368},{"_id":"public/about/index.html","hash":"484f94bbf2a5519978446643aea64f828f376af4","modified":1702980104368},{"_id":"public/hxpghblog/index.html","hash":"5e54a276aa0b2530f88b7c7fa09a5d457e9ee16b","modified":1702980104368},{"_id":"public/archives/index.html","hash":"a77d50aaea224fb88bd1fc65f4865c59c812610e","modified":1702980104368},{"_id":"public/archives/2023/index.html","hash":"0beeb3960ce8e6b4c01ddd972858cf21f56d82db","modified":1702980104368},{"_id":"public/archives/2023/12/index.html","hash":"3c342e18578ad77e9b0604e4ddc776d17d7a4a79","modified":1702980104368},{"_id":"public/categories/技术/index.html","hash":"5c4b6d090f92c5dd698b607c20101e4f0d502aa1","modified":1702980104368},{"_id":"public/index.html","hash":"7605aded4cf024ca455837dbd3918b0c19a21da7","modified":1702980104368},{"_id":"public/tags/Hexo/index.html","hash":"b01bf246d49cc2b67b7db03985d2c199de1ea047","modified":1702980104368},{"_id":"public/images/article01/70321.png","hash":"47126de5d77d013f672829dbcb0f73a38fc3a8ab","modified":1702980104368},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1702980104368},{"_id":"public/images/article01/70521.png","hash":"9be6668bf9d5ace676c424cfc97652e78e5b26b1","modified":1702980104368},{"_id":"public/img/avatar.jpg","hash":"ba9efac8b44d3c807e5cbfab17fa54fe00e73687","modified":1702980104368},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1702980104368},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1702980104368},{"_id":"public/css/index.css","hash":"4b1f439fca7c79baa969bf363cb6e44985b511fa","modified":1702980104368},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1702980104368},{"_id":"public/css/my_bg_color.css","hash":"0b7a92d4b47f9e9b870130caed6f9f5ee43c6924","modified":1702980104368},{"_id":"public/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1702980104368},{"_id":"public/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1702980104368},{"_id":"public/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1702980104368},{"_id":"public/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1702980104368},{"_id":"public/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1702980104368},{"_id":"public/img/bg_moon.png","hash":"21cb110e33141cfda16825678195cee97d0367f7","modified":1702980104368}],"Category":[{"name":"技术","_id":"clqc6duq30004tgkadqozc3xy"}],"Data":[],"Page":[{"_content":"google-site-verification: google5db6829ba3bda531.html","source":"google5db6829ba3bda531.html","raw":"google-site-verification: google5db6829ba3bda531.html","date":"2023-12-19T09:56:37.689Z","updated":"2023-12-19T09:56:32.040Z","path":"google5db6829ba3bda531.html","title":"","comments":1,"layout":"page","_id":"clqc6dupw0000tgka4fkg8ub0","content":"google-site-verification: google5db6829ba3bda531.html","site":{"data":{}},"cover":false,"excerpt":"","more":"google-site-verification: google5db6829ba3bda531.html"},{"title":"分类","date":"2023-12-17T10:14:16.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-12-17 18:14:16\ntype: \"categories\"\n---\n","updated":"2023-12-17T10:14:42.057Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clqc6duq10002tgka55gc8i81","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"标签","type":"tags","date":"2023-12-17T08:37:57.000Z","orderby":"random","order":1,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ntype: \"tags\"\ndate: 2023-12-17 16:37:57\norderby: random\norder: 1\n---\n","updated":"2023-12-17T08:40:03.952Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clqc6duq40005tgka2f11gjaj","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"关于","layout":"about","date":"2023-12-15T02:11:11.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\nlayout: about\ndate: 2023-12-15 10:11:11\n---\n","updated":"2023-12-17T13:00:02.362Z","path":"about/index.html","comments":1,"_id":"clqc6duq60008tgkaez48gclk","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"Ubuntu 22.04安装教程及使用技巧","abbrlink":"ac99d9f6","_content":"# Ubuntu 22.04安装教程及使用技巧\n\n## 前言\n&emsp;&emsp;通常所说的 Linux 其是指Linux内核，Linux 系统是指基于 Linux 内核的操作系统的泛称，而不是一个具体的操作系统。Ubuntu 则是 Linux 其中一个发行版，其他比较知名的还有 Debian、Fedora、CentOS等。<br/>\n&emsp;&emsp;作为程序员，我们可以用使用 Ubuntu 系统来体验 Linux、 熟悉命令行操作、部署服务器、搭建梯子和交叉编译，如编译 Android 项目所需的so库，编译 Android 系统源码等等。本文将面向新手介绍在 VMware 中安装和配置 Ubuntu 的过程，以及一些常用的技巧和命令。\n\n本文所用环境\n*   VMware Workstation 17 Pro\n*   Ubuntu 22.04.3 LTS Desktop 64-bit\n\n## 1 下载镜像\n```\n# Ubuntu官方网站\nhttps://cn.ubuntu.com/download/desktop\n```\n在Ubuntu官网下iso镜像文件，同时也可看到官方推荐的Ubuntu配置要求\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7ff944fe4d14327b69e05f19b442e53~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553\\&h=189\\&s=419018\\&e=png\\&b=f6f5f5)\n\n## 2 安装\n### 2.1 VMware虚拟机安装\n如果对性能要求不是很严格，通常选择在虚拟机环境中使用Ubuntu即可。如果有一台电脑专门用来安装Ubuntu，则跟Windows重装系统的前置步骤是一样的：制作Ubuntu的U盘启动盘->bios设置U盘启动->进入菜单开始安装，这里主要讲虚拟机的安装方式。  \nps：VMware Workstation 有Player和pro两款，pro功能更多，带有快照功能。\n1. 打开VMware，选择新建虚拟机->自定义，方便我们进行详细配置\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/327abb2bc1324ac8885814beb99f82f8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513\\&h=440\\&s=904864\\&e=png\\&b=fbfbfb)\n\n2. 点击下一步，虚拟机兼容性保持默认\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/deecba778054403582011c776448583a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f1f1f1)\n\n3. 安装来源区别就是，选择Ubuntu镜像文件会自动开启简易安装，默认开启英文的Ubuntu安装引导，这里选择“稍后安装操作系统”\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cb1a7e60ec345fdb37cfcffd05213f2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f0f0f0)\n\n4. 根据下载的镜像文件选择操作系统类型Linux，默认下载的是64位镜像\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c6ed3c13ffa4a5eb9eaf2257bafb2a8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f0f0f0)\n\n5. 选择安装位置，如果是需要进行编译等需要频繁读写磁盘的操作，强烈建议安装到SSD硬盘。\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8037f487f01c462a93f476c7ede2cc46~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f3f3f3)\n\n6. 选择CPU配置\n*   处理器数量 ：想要虚拟的CPU颗数。对应物理主机的cpu插槽数，除了多路服务器，家用机一般一个U，\n*   每个处理器的内核数量：想要虚拟的CPU内核数。对应物理主机的超线程支持的线程数\n*   处理器内核总数：处理器数量x每个处理器的内核数量\n\n总的原则是：虚拟机处理器内核总数：< 物理主机CPU实际的线程数，例如对于6核12线程的cpu能使用的最大处理器内核总数为12个\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc948e1ec94748eab5d5ed503f975a70~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2)\n\n7. 内存选择。根据需求选择，没什么需求就按默认推荐的4GB\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1d8a2758aec4aa995c52575aff1df68~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2)\n\n8. 网络选择，这里选择NAT模式或者桥接都可以。\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e3128ab236be4f2d96a4589a618fbf5e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2)\n\n模式区别如下：\n* 桥接模式：虚拟机加入宿主机所在的网络，允许访问Internet互联网（当然宿主机必须可以访问互联网才行）。可以将虚拟机看做一台新电脑，主机、虚拟机和其他电脑三者通过所在局域网，互联互通。\n* NAT模式：虚拟机和宿主机组成小局域网，互联互通。虚拟机通过宿主机访问外部网络（此时宿主机起到路由器作用），但外部网络不能访问虚拟机。\n* 仅主机模式：宿主机与虚拟机组成一个封闭的局域网，虚拟机不能访问外部网络、互联网，外部网络也不能访问虚拟机。\n\n9. 磁盘选择，IO控制器和虚拟磁盘类型选择软件推荐即可，影响不大，主要是选择磁盘大小，装Ubuntu建议20G以上，后期也可扩容。\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aabb363e547845338dc46bf692cfd709~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f1f1f1)\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b1b1d08b910468baf7ca9b446afd674~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2)\n\n10. 添加Ubuntu系统镜像文件\n点击自定义硬件->添加，在添加硬件向导窗口选择“CD/DVD驱动器”并按确认。点击CD/DVD驱动器，在“使用ISO影像文件”选择前面下载的iso文件\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90ed3831a1734cfb849c0d378e430138~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f6f6f6)\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7ec64c2071624c29a8ae8fb93d1cded3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=234&s=519698&e=png&b=fbfbfb)\n\n至此，VMware Ubuntu虚拟机配置部分已经完成，下面开始安装Ubuntu。\n<br/>\n\n### 2.2 安装Ubuntu系统\n从VMware中选择刚才新建的虚拟机，点击“开启此虚拟机”。虚拟机运行后选择（按回车）“Try or Install Ubuntu”\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8eb37f981da44efa836345c8b38458a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=306&s=679575&e=png&b=020202)\n\n1. 选择系统语言，这里为了方便演示安装过程选择中文，安装好之后系统就是中文的了，不过主文件下的目录也是中文命名（强迫症震怒），然后点击“安装Ubuntu”\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84223b5fd073413a87783263aebf4f9c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=f8f7f7)\n\n2. 选择键盘布局\n\n如果这里这里没有显示“继续”按钮，可能是Ubuntu的分辨率不对导致显示不全，可以关闭安装引导窗口，右键选择“Display Setting”->Resolution重新选择分辨率即可\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d16b9f66535440d48bbcd5c233e0dfc3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=faf9f9)\n\n3. 软件更新选择，按需或随意\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bd1309f47e354276afd9fa1705223bae~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=f9f9f9)\n\n4. 安装类型，可以选择自动分区，清除整个磁盘并安装Ubuntu，由于前面在VMware选择的是虚拟磁盘，可以大胆继续，不会对物理磁盘有影响。\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c19020789a9e43ff90ad23f260e1b714~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=501&s=1112591&e=png&b=abaaaa)\n\n5. 选择时区，点击地图选择上海就是**UTC+8**。（为什么没有Asia/Beijing？这个大概是中国时区划分的历史原因了，一直没有更新）\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aa853c4d979e4de4a7e1205006edb4ec~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=497&s=1103711&e=png&b=fafafa)\n\n6. 设置信息和密码\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7687c58d4f94446bb4c6d5343616461e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=501&s=1112591&e=png&b=f9f9f9)\n\n7. 等待安装并重启\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c54c7cfbee141fc9312d7b0b243650b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=421&s=934942&e=png&b=5f1a3f)\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/933a2c1e878f4b53b7e2a92545eb8026~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=415&s=921623&e=png&b=6b1d4c)\n\n8. 完成~\n\n![1702280297691.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/48f458c8eb9e49ec8f71f330c2547293~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=816&h=545&s=434735&e=png&b=822855)\n\n## 3 使用技巧\n\n#### 3.1 切换系统语言为中文\n如果安装过程选择的是英文，可以通过以下方式切换到中文：\n右键选择\"Display Settings\"->左侧菜单栏切换到\"Region&Language\"->在\"Language\"选项中选择\"Chinese\",重启完成\n如果没有中文选择，则选择Manage Installed Languages 安装中文语言包\n\n![6b5198bad92d57352d2af16f7b0208b.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ceb2b0c3e5ef43339a243867b71c4a0f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=806&h=481&s=43203&e=png&b=fafafa)\n\n#### 3.2 换源\n系统默认的软件源服务器位于国外，如果出现下载软件包很慢或者无法下载的问题，可以将官方源替换成国内镜像源或者设置科学上网以提高软件下载和安装的速度。\n\n打开系统设置->关于->软件更新->Ubuntu软件，点击“下载自:”->其他，选择国内的源或者通过“测试最佳服务器”选择网络连接更稳定的源\n\n![1702281722636.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/56e1d9e1fdd54836baf7584305771a6e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=706&h=664&s=74817&e=png&b=d0d0d0)\n\n#### 3.3 虚拟机使用主机的网络代理\n如果主机配置了科学上网，可以通过如下方式使虚拟机也连接上代理，这里以v2ray为例：\n\n1. v2ray参数设置勾选“允许来自局域网的连接”\n2. Ubuntu设置-网络-网络代理，填写Http、Https、Socks设置，\n\n其中IP地址是主机的IP地址（“以太网适配器-以太网”），端口号是v2ray窗口底部导航栏“局域网[socks:xxxx][http:xxxy]”中的端口号，虚拟机网卡选桥接还是NAT都可以，v2ray也不用选全局路由。\n\n![1702282703329.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5600d45ebe024c87a7972706f0b63d3b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=980&h=579&s=59461&e=png&b=cdcdcd)\n\n#### 3.4 Ubuntu与宿主机互相复制文本或文件\n如果是Ubuntu server 可以使用lrzsz或其他ftp工具进行文件的上传或下载，在VMware中有更方便的插件\n：VMware Tools，不过兼容性不好，更推荐使用open-vm-tools，如果是桌面版使用open-vm-tools-desktop功能更多\n```\n# 检查是否安装open-vm-tools有则卸载\nsudo apt remove open-vm-tools\n# 安装open-vm-tools-desktop\nsudo apt install open-vm-tools-desktop\n```\n\n#### 3.5 配置环境变量\n.bashrc文件是用于储存用户的终端配置，包括环境变量等，以配置java环境变量为例：\n```\n# 检查是否安装jdk\njava -version\n\n# 安装openjdk-11\nsudo apt-get install openjdk-11-jdk\n\n# 打开bashrc文件\nsudo gedit ~/.bashrc\n\n#在最后一行加上:\nexport JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\nexport PATH=$JAVA_HOME/bin:$PATH\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n\n# 使环境变量马上生效\nsource ~/.bashrc\n```\n\n#### 3.6 快照功能\n快照功能是一个非常实用的功能，类似系统的还原点，不管如何瞎折腾都可以将操作系统快速还原到某个时刻，一般在搭好环境后就可以打个快照。VMware也提供了快照管理功能，位置在菜单栏“虚拟机”->快照。\n\n![3f064fcf1a767f77f100639ff75c48a.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2f1c9b80fc274118a0ba2b7b22ce85f1~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=935&h=442&s=219302&e=png&b=f1f0f0)\n\n#### 3.7 磁盘扩容\n当Ubuntu的磁盘空间不足时，可以通过扩容的方式（当然物理硬盘还有剩余空间）增加磁盘大小。可以通过**df -h**查看当前磁盘状态。我们使用的是Ubuntu desktop，可以直接通过软件界面进行调整。\n例如当初分配给Ubuntu的硬盘大小只有25G，现在扩容到30G：\n* 点击“编辑虚拟机设置”->硬件->硬盘->扩展，设置新容量大小\n* Ubuntu侧边栏的显示应用程序->工具文件夹->“磁盘”应用，点击Hard Disk，可以发现多了一块未分配空间，\n在需要扩容的分区点击齿轮图标选择调整大小，输入调整的大小并确认。\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/103aebe81b11419392b91b437b9769b2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=896&h=516&s=121387&e=png&b=f8f7f7)\n![338dee9d28573dee0f979f6979469fd.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3526b065ca6e4f89897133ca0d7747f2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=902&h=601&s=93392&e=png&b=d6d6d6)\n\n## 4 常用命令\n#### 4.1 软件管理\napt是一个Shell 前端软件包管理器，提供软件包的安装、更新和卸载等功能，使用apt命令需要root权限。\n```\n# 以git为例\n# 检查可用的软件包更新\nsudo apt update\n\n# 安装\nsudo apt install git\n\n# 卸载\nsudo apt remove git \n```\n\n#### 4.2 文件处理\n```\n# 新建文件\ntouch filename.suffix\n\n# 创建目录，-p：确保目录名称存在，不存在的就建一个，可以用来创建多层目录\nmkdir -p app/src/main\n\n# 移动文件\nmv [options] sourcefile directory\n\n# 重命名\nmv [options] oldname newname\n\n# 复制文件\ncp [options] sourcefile directory\n\n# 删除文件，-r：删除包括所有子文件，-f：直接删除，谨慎使用rm -rf\nrm filename\n```\n\n#### 4.3 解压文件 \n```\n# ​.tar.gz 和 .tgz​格式\n$ tar zxvf FileName.tar.gz\n\n#.zip格式\nunzip FileName.zip\n\n```\n\n#### 4.4 创建root用户\n```\n# 创建root用户，依照提示输入密码\nsudo passwd root\n\n#进入root用户\nsu root\n```\n\n#### 4.5 同步时间\n```\n# 查看时间\ndate\n\n# 使用ntpdate同步网络时间\nsudo apt install ntpdate\n\n# 从cn.pool.ntp.org服务器同步网络时间\nntpdate -u cn.pool.ntp.org\n```\n\n#### 4.6 查找文件里符合条件的字符串\n在当前文件夹下搜索文件里面的字符内容，-r表示递归查找子目录中的文件，-w表示只显示全字符合的列\n```\ngrep -rw \"search\" \n```\n\n#### 4.7 vim 简单使用\n\n```\n# 打开文件\nvim filename.txt\n\n# 编辑文件\n# 1.打开文件后默认命令模式，按“i”进入编辑模式\n# 2.编辑完成，按“esc”返回命令模式，此时可以进行保存等操作\n\n# 退出文件\n# 1.保存并退出\n:wq\n\n# 2.放弃修改并退出\n:q!\n```\n\n#### 4.8 其他\n```\n# 修改所有用户组对文件的权限为最高权限(可读可写可执行）\nchmod -R 777 filename \n\n# 查看文件的内容，输出到终端\ncat filename\n\n# 将终端内容输出到文件，免去手动复制终端内容\nscript -f -a /path/log.txt\n```\n\n## 总结\n&emsp;&emsp;以上便是Ubuntu从虚拟机配置参数讲解到Ubuntu安装的全过程，以及一些个人认为比较实用的使用技巧。至于命令，如果是体验Linux记不住也没关系，当你有实际需求时，例如交叉编译源码，你会记住的。","source":"_drafts/Ubuntu 22.04详细安装教程及使用技巧.md","raw":"---\ntitle: Ubuntu 22.04安装教程及使用技巧\ncategories: 技术\nabbrlink: ac99d9f6\n---\n# Ubuntu 22.04安装教程及使用技巧\n\n## 前言\n&emsp;&emsp;通常所说的 Linux 其是指Linux内核，Linux 系统是指基于 Linux 内核的操作系统的泛称，而不是一个具体的操作系统。Ubuntu 则是 Linux 其中一个发行版，其他比较知名的还有 Debian、Fedora、CentOS等。<br/>\n&emsp;&emsp;作为程序员，我们可以用使用 Ubuntu 系统来体验 Linux、 熟悉命令行操作、部署服务器、搭建梯子和交叉编译，如编译 Android 项目所需的so库，编译 Android 系统源码等等。本文将面向新手介绍在 VMware 中安装和配置 Ubuntu 的过程，以及一些常用的技巧和命令。\n\n本文所用环境\n*   VMware Workstation 17 Pro\n*   Ubuntu 22.04.3 LTS Desktop 64-bit\n\n## 1 下载镜像\n```\n# Ubuntu官方网站\nhttps://cn.ubuntu.com/download/desktop\n```\n在Ubuntu官网下iso镜像文件，同时也可看到官方推荐的Ubuntu配置要求\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7ff944fe4d14327b69e05f19b442e53~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553\\&h=189\\&s=419018\\&e=png\\&b=f6f5f5)\n\n## 2 安装\n### 2.1 VMware虚拟机安装\n如果对性能要求不是很严格，通常选择在虚拟机环境中使用Ubuntu即可。如果有一台电脑专门用来安装Ubuntu，则跟Windows重装系统的前置步骤是一样的：制作Ubuntu的U盘启动盘->bios设置U盘启动->进入菜单开始安装，这里主要讲虚拟机的安装方式。  \nps：VMware Workstation 有Player和pro两款，pro功能更多，带有快照功能。\n1. 打开VMware，选择新建虚拟机->自定义，方便我们进行详细配置\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/327abb2bc1324ac8885814beb99f82f8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513\\&h=440\\&s=904864\\&e=png\\&b=fbfbfb)\n\n2. 点击下一步，虚拟机兼容性保持默认\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/deecba778054403582011c776448583a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f1f1f1)\n\n3. 安装来源区别就是，选择Ubuntu镜像文件会自动开启简易安装，默认开启英文的Ubuntu安装引导，这里选择“稍后安装操作系统”\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cb1a7e60ec345fdb37cfcffd05213f2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f0f0f0)\n\n4. 根据下载的镜像文件选择操作系统类型Linux，默认下载的是64位镜像\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c6ed3c13ffa4a5eb9eaf2257bafb2a8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f0f0f0)\n\n5. 选择安装位置，如果是需要进行编译等需要频繁读写磁盘的操作，强烈建议安装到SSD硬盘。\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8037f487f01c462a93f476c7ede2cc46~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f3f3f3)\n\n6. 选择CPU配置\n*   处理器数量 ：想要虚拟的CPU颗数。对应物理主机的cpu插槽数，除了多路服务器，家用机一般一个U，\n*   每个处理器的内核数量：想要虚拟的CPU内核数。对应物理主机的超线程支持的线程数\n*   处理器内核总数：处理器数量x每个处理器的内核数量\n\n总的原则是：虚拟机处理器内核总数：< 物理主机CPU实际的线程数，例如对于6核12线程的cpu能使用的最大处理器内核总数为12个\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc948e1ec94748eab5d5ed503f975a70~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2)\n\n7. 内存选择。根据需求选择，没什么需求就按默认推荐的4GB\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1d8a2758aec4aa995c52575aff1df68~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2)\n\n8. 网络选择，这里选择NAT模式或者桥接都可以。\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e3128ab236be4f2d96a4589a618fbf5e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2)\n\n模式区别如下：\n* 桥接模式：虚拟机加入宿主机所在的网络，允许访问Internet互联网（当然宿主机必须可以访问互联网才行）。可以将虚拟机看做一台新电脑，主机、虚拟机和其他电脑三者通过所在局域网，互联互通。\n* NAT模式：虚拟机和宿主机组成小局域网，互联互通。虚拟机通过宿主机访问外部网络（此时宿主机起到路由器作用），但外部网络不能访问虚拟机。\n* 仅主机模式：宿主机与虚拟机组成一个封闭的局域网，虚拟机不能访问外部网络、互联网，外部网络也不能访问虚拟机。\n\n9. 磁盘选择，IO控制器和虚拟磁盘类型选择软件推荐即可，影响不大，主要是选择磁盘大小，装Ubuntu建议20G以上，后期也可扩容。\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aabb363e547845338dc46bf692cfd709~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f1f1f1)\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b1b1d08b910468baf7ca9b446afd674~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2)\n\n10. 添加Ubuntu系统镜像文件\n点击自定义硬件->添加，在添加硬件向导窗口选择“CD/DVD驱动器”并按确认。点击CD/DVD驱动器，在“使用ISO影像文件”选择前面下载的iso文件\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90ed3831a1734cfb849c0d378e430138~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f6f6f6)\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7ec64c2071624c29a8ae8fb93d1cded3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=234&s=519698&e=png&b=fbfbfb)\n\n至此，VMware Ubuntu虚拟机配置部分已经完成，下面开始安装Ubuntu。\n<br/>\n\n### 2.2 安装Ubuntu系统\n从VMware中选择刚才新建的虚拟机，点击“开启此虚拟机”。虚拟机运行后选择（按回车）“Try or Install Ubuntu”\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8eb37f981da44efa836345c8b38458a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=306&s=679575&e=png&b=020202)\n\n1. 选择系统语言，这里为了方便演示安装过程选择中文，安装好之后系统就是中文的了，不过主文件下的目录也是中文命名（强迫症震怒），然后点击“安装Ubuntu”\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84223b5fd073413a87783263aebf4f9c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=f8f7f7)\n\n2. 选择键盘布局\n\n如果这里这里没有显示“继续”按钮，可能是Ubuntu的分辨率不对导致显示不全，可以关闭安装引导窗口，右键选择“Display Setting”->Resolution重新选择分辨率即可\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d16b9f66535440d48bbcd5c233e0dfc3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=faf9f9)\n\n3. 软件更新选择，按需或随意\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bd1309f47e354276afd9fa1705223bae~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=f9f9f9)\n\n4. 安装类型，可以选择自动分区，清除整个磁盘并安装Ubuntu，由于前面在VMware选择的是虚拟磁盘，可以大胆继续，不会对物理磁盘有影响。\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c19020789a9e43ff90ad23f260e1b714~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=501&s=1112591&e=png&b=abaaaa)\n\n5. 选择时区，点击地图选择上海就是**UTC+8**。（为什么没有Asia/Beijing？这个大概是中国时区划分的历史原因了，一直没有更新）\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aa853c4d979e4de4a7e1205006edb4ec~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=497&s=1103711&e=png&b=fafafa)\n\n6. 设置信息和密码\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7687c58d4f94446bb4c6d5343616461e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=501&s=1112591&e=png&b=f9f9f9)\n\n7. 等待安装并重启\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c54c7cfbee141fc9312d7b0b243650b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=421&s=934942&e=png&b=5f1a3f)\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/933a2c1e878f4b53b7e2a92545eb8026~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=415&s=921623&e=png&b=6b1d4c)\n\n8. 完成~\n\n![1702280297691.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/48f458c8eb9e49ec8f71f330c2547293~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=816&h=545&s=434735&e=png&b=822855)\n\n## 3 使用技巧\n\n#### 3.1 切换系统语言为中文\n如果安装过程选择的是英文，可以通过以下方式切换到中文：\n右键选择\"Display Settings\"->左侧菜单栏切换到\"Region&Language\"->在\"Language\"选项中选择\"Chinese\",重启完成\n如果没有中文选择，则选择Manage Installed Languages 安装中文语言包\n\n![6b5198bad92d57352d2af16f7b0208b.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ceb2b0c3e5ef43339a243867b71c4a0f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=806&h=481&s=43203&e=png&b=fafafa)\n\n#### 3.2 换源\n系统默认的软件源服务器位于国外，如果出现下载软件包很慢或者无法下载的问题，可以将官方源替换成国内镜像源或者设置科学上网以提高软件下载和安装的速度。\n\n打开系统设置->关于->软件更新->Ubuntu软件，点击“下载自:”->其他，选择国内的源或者通过“测试最佳服务器”选择网络连接更稳定的源\n\n![1702281722636.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/56e1d9e1fdd54836baf7584305771a6e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=706&h=664&s=74817&e=png&b=d0d0d0)\n\n#### 3.3 虚拟机使用主机的网络代理\n如果主机配置了科学上网，可以通过如下方式使虚拟机也连接上代理，这里以v2ray为例：\n\n1. v2ray参数设置勾选“允许来自局域网的连接”\n2. Ubuntu设置-网络-网络代理，填写Http、Https、Socks设置，\n\n其中IP地址是主机的IP地址（“以太网适配器-以太网”），端口号是v2ray窗口底部导航栏“局域网[socks:xxxx][http:xxxy]”中的端口号，虚拟机网卡选桥接还是NAT都可以，v2ray也不用选全局路由。\n\n![1702282703329.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5600d45ebe024c87a7972706f0b63d3b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=980&h=579&s=59461&e=png&b=cdcdcd)\n\n#### 3.4 Ubuntu与宿主机互相复制文本或文件\n如果是Ubuntu server 可以使用lrzsz或其他ftp工具进行文件的上传或下载，在VMware中有更方便的插件\n：VMware Tools，不过兼容性不好，更推荐使用open-vm-tools，如果是桌面版使用open-vm-tools-desktop功能更多\n```\n# 检查是否安装open-vm-tools有则卸载\nsudo apt remove open-vm-tools\n# 安装open-vm-tools-desktop\nsudo apt install open-vm-tools-desktop\n```\n\n#### 3.5 配置环境变量\n.bashrc文件是用于储存用户的终端配置，包括环境变量等，以配置java环境变量为例：\n```\n# 检查是否安装jdk\njava -version\n\n# 安装openjdk-11\nsudo apt-get install openjdk-11-jdk\n\n# 打开bashrc文件\nsudo gedit ~/.bashrc\n\n#在最后一行加上:\nexport JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\nexport PATH=$JAVA_HOME/bin:$PATH\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n\n# 使环境变量马上生效\nsource ~/.bashrc\n```\n\n#### 3.6 快照功能\n快照功能是一个非常实用的功能，类似系统的还原点，不管如何瞎折腾都可以将操作系统快速还原到某个时刻，一般在搭好环境后就可以打个快照。VMware也提供了快照管理功能，位置在菜单栏“虚拟机”->快照。\n\n![3f064fcf1a767f77f100639ff75c48a.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2f1c9b80fc274118a0ba2b7b22ce85f1~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=935&h=442&s=219302&e=png&b=f1f0f0)\n\n#### 3.7 磁盘扩容\n当Ubuntu的磁盘空间不足时，可以通过扩容的方式（当然物理硬盘还有剩余空间）增加磁盘大小。可以通过**df -h**查看当前磁盘状态。我们使用的是Ubuntu desktop，可以直接通过软件界面进行调整。\n例如当初分配给Ubuntu的硬盘大小只有25G，现在扩容到30G：\n* 点击“编辑虚拟机设置”->硬件->硬盘->扩展，设置新容量大小\n* Ubuntu侧边栏的显示应用程序->工具文件夹->“磁盘”应用，点击Hard Disk，可以发现多了一块未分配空间，\n在需要扩容的分区点击齿轮图标选择调整大小，输入调整的大小并确认。\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/103aebe81b11419392b91b437b9769b2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=896&h=516&s=121387&e=png&b=f8f7f7)\n![338dee9d28573dee0f979f6979469fd.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3526b065ca6e4f89897133ca0d7747f2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=902&h=601&s=93392&e=png&b=d6d6d6)\n\n## 4 常用命令\n#### 4.1 软件管理\napt是一个Shell 前端软件包管理器，提供软件包的安装、更新和卸载等功能，使用apt命令需要root权限。\n```\n# 以git为例\n# 检查可用的软件包更新\nsudo apt update\n\n# 安装\nsudo apt install git\n\n# 卸载\nsudo apt remove git \n```\n\n#### 4.2 文件处理\n```\n# 新建文件\ntouch filename.suffix\n\n# 创建目录，-p：确保目录名称存在，不存在的就建一个，可以用来创建多层目录\nmkdir -p app/src/main\n\n# 移动文件\nmv [options] sourcefile directory\n\n# 重命名\nmv [options] oldname newname\n\n# 复制文件\ncp [options] sourcefile directory\n\n# 删除文件，-r：删除包括所有子文件，-f：直接删除，谨慎使用rm -rf\nrm filename\n```\n\n#### 4.3 解压文件 \n```\n# ​.tar.gz 和 .tgz​格式\n$ tar zxvf FileName.tar.gz\n\n#.zip格式\nunzip FileName.zip\n\n```\n\n#### 4.4 创建root用户\n```\n# 创建root用户，依照提示输入密码\nsudo passwd root\n\n#进入root用户\nsu root\n```\n\n#### 4.5 同步时间\n```\n# 查看时间\ndate\n\n# 使用ntpdate同步网络时间\nsudo apt install ntpdate\n\n# 从cn.pool.ntp.org服务器同步网络时间\nntpdate -u cn.pool.ntp.org\n```\n\n#### 4.6 查找文件里符合条件的字符串\n在当前文件夹下搜索文件里面的字符内容，-r表示递归查找子目录中的文件，-w表示只显示全字符合的列\n```\ngrep -rw \"search\" \n```\n\n#### 4.7 vim 简单使用\n\n```\n# 打开文件\nvim filename.txt\n\n# 编辑文件\n# 1.打开文件后默认命令模式，按“i”进入编辑模式\n# 2.编辑完成，按“esc”返回命令模式，此时可以进行保存等操作\n\n# 退出文件\n# 1.保存并退出\n:wq\n\n# 2.放弃修改并退出\n:q!\n```\n\n#### 4.8 其他\n```\n# 修改所有用户组对文件的权限为最高权限(可读可写可执行）\nchmod -R 777 filename \n\n# 查看文件的内容，输出到终端\ncat filename\n\n# 将终端内容输出到文件，免去手动复制终端内容\nscript -f -a /path/log.txt\n```\n\n## 总结\n&emsp;&emsp;以上便是Ubuntu从虚拟机配置参数讲解到Ubuntu安装的全过程，以及一些个人认为比较实用的使用技巧。至于命令，如果是体验Linux记不住也没关系，当你有实际需求时，例如交叉编译源码，你会记住的。","slug":"Ubuntu 22.04详细安装教程及使用技巧","published":0,"date":"2023-12-18T01:54:36.429Z","updated":"2023-12-18T01:55:53.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqc6dupy0001tgkadosbdrbd","content":"<h1 id=\"Ubuntu-22-04安装教程及使用技巧\"><a href=\"#Ubuntu-22-04安装教程及使用技巧\" class=\"headerlink\" title=\"Ubuntu 22.04安装教程及使用技巧\"></a>Ubuntu 22.04安装教程及使用技巧</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>&emsp;&emsp;通常所说的 Linux 其是指Linux内核，Linux 系统是指基于 Linux 内核的操作系统的泛称，而不是一个具体的操作系统。Ubuntu 则是 Linux 其中一个发行版，其他比较知名的还有 Debian、Fedora、CentOS等。<br/><br>&emsp;&emsp;作为程序员，我们可以用使用 Ubuntu 系统来体验 Linux、 熟悉命令行操作、部署服务器、搭建梯子和交叉编译，如编译 Android 项目所需的so库，编译 Android 系统源码等等。本文将面向新手介绍在 VMware 中安装和配置 Ubuntu 的过程，以及一些常用的技巧和命令。</p>\n<p>本文所用环境</p>\n<ul>\n<li>VMware Workstation 17 Pro</li>\n<li>Ubuntu 22.04.3 LTS Desktop 64-bit</li>\n</ul>\n<h2 id=\"1-下载镜像\"><a href=\"#1-下载镜像\" class=\"headerlink\" title=\"1 下载镜像\"></a>1 下载镜像</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Ubuntu官方网站</span><br><span class=\"line\">https://cn.ubuntu.com/download/desktop</span><br></pre></td></tr></table></figure>\n<p>在Ubuntu官网下iso镜像文件，同时也可看到官方推荐的Ubuntu配置要求<br><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7ff944fe4d14327b69e05f19b442e53~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=189&s=419018&e=png&b=f6f5f5\" alt=\"image.png\"></p>\n<h2 id=\"2-安装\"><a href=\"#2-安装\" class=\"headerlink\" title=\"2 安装\"></a>2 安装</h2><h3 id=\"2-1-VMware虚拟机安装\"><a href=\"#2-1-VMware虚拟机安装\" class=\"headerlink\" title=\"2.1 VMware虚拟机安装\"></a>2.1 VMware虚拟机安装</h3><p>如果对性能要求不是很严格，通常选择在虚拟机环境中使用Ubuntu即可。如果有一台电脑专门用来安装Ubuntu，则跟Windows重装系统的前置步骤是一样的：制作Ubuntu的U盘启动盘-&gt;bios设置U盘启动-&gt;进入菜单开始安装，这里主要讲虚拟机的安装方式。<br>ps：VMware Workstation 有Player和pro两款，pro功能更多，带有快照功能。</p>\n<ol>\n<li>打开VMware，选择新建虚拟机-&gt;自定义，方便我们进行详细配置</li>\n</ol>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/327abb2bc1324ac8885814beb99f82f8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=fbfbfb\" alt=\"image.png\"></p>\n<p>2. 点击下一步，虚拟机兼容性保持默认</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/deecba778054403582011c776448583a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f1f1f1\" alt=\"image.png\"></p>\n<p>3. 安装来源区别就是，选择Ubuntu镜像文件会自动开启简易安装，默认开启英文的Ubuntu安装引导，这里选择“稍后安装操作系统”</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cb1a7e60ec345fdb37cfcffd05213f2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f0f0f0\" alt=\"image.png\"></p>\n<p>4. 根据下载的镜像文件选择操作系统类型Linux，默认下载的是64位镜像</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c6ed3c13ffa4a5eb9eaf2257bafb2a8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f0f0f0\" alt=\"image.png\"></p>\n<p>5. 选择安装位置，如果是需要进行编译等需要频繁读写磁盘的操作，强烈建议安装到SSD硬盘。</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8037f487f01c462a93f476c7ede2cc46~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f3f3f3\" alt=\"image.png\"></p>\n<p>6. 选择CPU配置</p>\n<ul>\n<li>处理器数量 ：想要虚拟的CPU颗数。对应物理主机的cpu插槽数，除了多路服务器，家用机一般一个U，</li>\n<li>每个处理器的内核数量：想要虚拟的CPU内核数。对应物理主机的超线程支持的线程数</li>\n<li>处理器内核总数：处理器数量x每个处理器的内核数量</li>\n</ul>\n<p>总的原则是：虚拟机处理器内核总数：&lt; 物理主机CPU实际的线程数，例如对于6核12线程的cpu能使用的最大处理器内核总数为12个</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc948e1ec94748eab5d5ed503f975a70~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2\" alt=\"image.png\"></p>\n<p>7. 内存选择。根据需求选择，没什么需求就按默认推荐的4GB</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1d8a2758aec4aa995c52575aff1df68~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2\" alt=\"image.png\"></p>\n<p>8. 网络选择，这里选择NAT模式或者桥接都可以。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e3128ab236be4f2d96a4589a618fbf5e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2\" alt=\"image.png\"></p>\n<p>模式区别如下：</p>\n<ul>\n<li>桥接模式：虚拟机加入宿主机所在的网络，允许访问Internet互联网（当然宿主机必须可以访问互联网才行）。可以将虚拟机看做一台新电脑，主机、虚拟机和其他电脑三者通过所在局域网，互联互通。</li>\n<li>NAT模式：虚拟机和宿主机组成小局域网，互联互通。虚拟机通过宿主机访问外部网络（此时宿主机起到路由器作用），但外部网络不能访问虚拟机。</li>\n<li>仅主机模式：宿主机与虚拟机组成一个封闭的局域网，虚拟机不能访问外部网络、互联网，外部网络也不能访问虚拟机。</li>\n</ul>\n<ol start=\"9\">\n<li>磁盘选择，IO控制器和虚拟磁盘类型选择软件推荐即可，影响不大，主要是选择磁盘大小，装Ubuntu建议20G以上，后期也可扩容。</li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aabb363e547845338dc46bf692cfd709~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f1f1f1\" alt=\"image.png\"></p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b1b1d08b910468baf7ca9b446afd674~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2\" alt=\"image.png\"></p>\n<p>10. 添加Ubuntu系统镜像文件<br>点击自定义硬件-&gt;添加，在添加硬件向导窗口选择“CD&#x2F;DVD驱动器”并按确认。点击CD&#x2F;DVD驱动器，在“使用ISO影像文件”选择前面下载的iso文件</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90ed3831a1734cfb849c0d378e430138~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f6f6f6\" alt=\"image.png\"></p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7ec64c2071624c29a8ae8fb93d1cded3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=234&s=519698&e=png&b=fbfbfb\" alt=\"image.png\"></p>\n<p>至此，VMware Ubuntu虚拟机配置部分已经完成，下面开始安装Ubuntu。<br><br/></p>\n<h3 id=\"2-2-安装Ubuntu系统\"><a href=\"#2-2-安装Ubuntu系统\" class=\"headerlink\" title=\"2.2 安装Ubuntu系统\"></a>2.2 安装Ubuntu系统</h3><p>从VMware中选择刚才新建的虚拟机，点击“开启此虚拟机”。虚拟机运行后选择（按回车）“Try or Install Ubuntu”</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8eb37f981da44efa836345c8b38458a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=306&s=679575&e=png&b=020202\" alt=\"image.png\"></p>\n<ol>\n<li>选择系统语言，这里为了方便演示安装过程选择中文，安装好之后系统就是中文的了，不过主文件下的目录也是中文命名（强迫症震怒），然后点击“安装Ubuntu”</li>\n</ol>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84223b5fd073413a87783263aebf4f9c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=f8f7f7\" alt=\"image.png\"></p>\n<ol start=\"2\">\n<li>选择键盘布局</li>\n</ol>\n<p>如果这里这里没有显示“继续”按钮，可能是Ubuntu的分辨率不对导致显示不全，可以关闭安装引导窗口，右键选择“Display Setting”-&gt;Resolution重新选择分辨率即可</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d16b9f66535440d48bbcd5c233e0dfc3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=faf9f9\" alt=\"image.png\"></p>\n<ol start=\"3\">\n<li>软件更新选择，按需或随意</li>\n</ol>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bd1309f47e354276afd9fa1705223bae~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=f9f9f9\" alt=\"image.png\"></p>\n<ol start=\"4\">\n<li>安装类型，可以选择自动分区，清除整个磁盘并安装Ubuntu，由于前面在VMware选择的是虚拟磁盘，可以大胆继续，不会对物理磁盘有影响。</li>\n</ol>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c19020789a9e43ff90ad23f260e1b714~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=501&s=1112591&e=png&b=abaaaa\" alt=\"image.png\"></p>\n<ol start=\"5\">\n<li>选择时区，点击地图选择上海就是<strong>UTC+8</strong>。（为什么没有Asia&#x2F;Beijing？这个大概是中国时区划分的历史原因了，一直没有更新）</li>\n</ol>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aa853c4d979e4de4a7e1205006edb4ec~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=497&s=1103711&e=png&b=fafafa\" alt=\"image.png\"></p>\n<ol start=\"6\">\n<li>设置信息和密码</li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7687c58d4f94446bb4c6d5343616461e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=501&s=1112591&e=png&b=f9f9f9\" alt=\"image.png\"></p>\n<ol start=\"7\">\n<li>等待安装并重启</li>\n</ol>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c54c7cfbee141fc9312d7b0b243650b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=421&s=934942&e=png&b=5f1a3f\" alt=\"image.png\"></p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/933a2c1e878f4b53b7e2a92545eb8026~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=415&s=921623&e=png&b=6b1d4c\" alt=\"image.png\"></p>\n<ol start=\"8\">\n<li>完成~</li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/48f458c8eb9e49ec8f71f330c2547293~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=816&h=545&s=434735&e=png&b=822855\" alt=\"1702280297691.png\"></p>\n<h2 id=\"3-使用技巧\"><a href=\"#3-使用技巧\" class=\"headerlink\" title=\"3 使用技巧\"></a>3 使用技巧</h2><h4 id=\"3-1-切换系统语言为中文\"><a href=\"#3-1-切换系统语言为中文\" class=\"headerlink\" title=\"3.1 切换系统语言为中文\"></a>3.1 切换系统语言为中文</h4><p>如果安装过程选择的是英文，可以通过以下方式切换到中文：<br>右键选择”Display Settings”-&gt;左侧菜单栏切换到”Region&amp;Language”-&gt;在”Language”选项中选择”Chinese”,重启完成<br>如果没有中文选择，则选择Manage Installed Languages 安装中文语言包</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ceb2b0c3e5ef43339a243867b71c4a0f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=806&h=481&s=43203&e=png&b=fafafa\" alt=\"6b5198bad92d57352d2af16f7b0208b.png\"></p>\n<h4 id=\"3-2-换源\"><a href=\"#3-2-换源\" class=\"headerlink\" title=\"3.2 换源\"></a>3.2 换源</h4><p>系统默认的软件源服务器位于国外，如果出现下载软件包很慢或者无法下载的问题，可以将官方源替换成国内镜像源或者设置科学上网以提高软件下载和安装的速度。</p>\n<p>打开系统设置-&gt;关于-&gt;软件更新-&gt;Ubuntu软件，点击“下载自:”-&gt;其他，选择国内的源或者通过“测试最佳服务器”选择网络连接更稳定的源</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/56e1d9e1fdd54836baf7584305771a6e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=706&h=664&s=74817&e=png&b=d0d0d0\" alt=\"1702281722636.png\"></p>\n<h4 id=\"3-3-虚拟机使用主机的网络代理\"><a href=\"#3-3-虚拟机使用主机的网络代理\" class=\"headerlink\" title=\"3.3 虚拟机使用主机的网络代理\"></a>3.3 虚拟机使用主机的网络代理</h4><p>如果主机配置了科学上网，可以通过如下方式使虚拟机也连接上代理，这里以v2ray为例：</p>\n<ol>\n<li>v2ray参数设置勾选“允许来自局域网的连接”</li>\n<li>Ubuntu设置-网络-网络代理，填写Http、Https、Socks设置，</li>\n</ol>\n<p>其中IP地址是主机的IP地址（“以太网适配器-以太网”），端口号是v2ray窗口底部导航栏“局域网[socks:xxxx][http:xxxy]”中的端口号，虚拟机网卡选桥接还是NAT都可以，v2ray也不用选全局路由。</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5600d45ebe024c87a7972706f0b63d3b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=980&h=579&s=59461&e=png&b=cdcdcd\" alt=\"1702282703329.png\"></p>\n<h4 id=\"3-4-Ubuntu与宿主机互相复制文本或文件\"><a href=\"#3-4-Ubuntu与宿主机互相复制文本或文件\" class=\"headerlink\" title=\"3.4 Ubuntu与宿主机互相复制文本或文件\"></a>3.4 Ubuntu与宿主机互相复制文本或文件</h4><p>如果是Ubuntu server 可以使用lrzsz或其他ftp工具进行文件的上传或下载，在VMware中有更方便的插件<br>：VMware Tools，不过兼容性不好，更推荐使用open-vm-tools，如果是桌面版使用open-vm-tools-desktop功能更多</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 检查是否安装open-vm-tools有则卸载</span><br><span class=\"line\">sudo apt remove open-vm-tools</span><br><span class=\"line\"># 安装open-vm-tools-desktop</span><br><span class=\"line\">sudo apt install open-vm-tools-desktop</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-5-配置环境变量\"><a href=\"#3-5-配置环境变量\" class=\"headerlink\" title=\"3.5 配置环境变量\"></a>3.5 配置环境变量</h4><p>.bashrc文件是用于储存用户的终端配置，包括环境变量等，以配置java环境变量为例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 检查是否安装jdk</span><br><span class=\"line\">java -version</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装openjdk-11</span><br><span class=\"line\">sudo apt-get install openjdk-11-jdk</span><br><span class=\"line\"></span><br><span class=\"line\"># 打开bashrc文件</span><br><span class=\"line\">sudo gedit ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">#在最后一行加上:</span><br><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64</span><br><span class=\"line\">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\"></span><br><span class=\"line\"># 使环境变量马上生效</span><br><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-6-快照功能\"><a href=\"#3-6-快照功能\" class=\"headerlink\" title=\"3.6 快照功能\"></a>3.6 快照功能</h4><p>快照功能是一个非常实用的功能，类似系统的还原点，不管如何瞎折腾都可以将操作系统快速还原到某个时刻，一般在搭好环境后就可以打个快照。VMware也提供了快照管理功能，位置在菜单栏“虚拟机”-&gt;快照。</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2f1c9b80fc274118a0ba2b7b22ce85f1~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=935&h=442&s=219302&e=png&b=f1f0f0\" alt=\"3f064fcf1a767f77f100639ff75c48a.png\"></p>\n<h4 id=\"3-7-磁盘扩容\"><a href=\"#3-7-磁盘扩容\" class=\"headerlink\" title=\"3.7 磁盘扩容\"></a>3.7 磁盘扩容</h4><p>当Ubuntu的磁盘空间不足时，可以通过扩容的方式（当然物理硬盘还有剩余空间）增加磁盘大小。可以通过<strong>df -h</strong>查看当前磁盘状态。我们使用的是Ubuntu desktop，可以直接通过软件界面进行调整。<br>例如当初分配给Ubuntu的硬盘大小只有25G，现在扩容到30G：</p>\n<ul>\n<li>点击“编辑虚拟机设置”-&gt;硬件-&gt;硬盘-&gt;扩展，设置新容量大小</li>\n<li>Ubuntu侧边栏的显示应用程序-&gt;工具文件夹-&gt;“磁盘”应用，点击Hard Disk，可以发现多了一块未分配空间，<br>在需要扩容的分区点击齿轮图标选择调整大小，输入调整的大小并确认。</li>\n</ul>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/103aebe81b11419392b91b437b9769b2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=896&h=516&s=121387&e=png&b=f8f7f7\" alt=\"image.png\"><br><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3526b065ca6e4f89897133ca0d7747f2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=902&h=601&s=93392&e=png&b=d6d6d6\" alt=\"338dee9d28573dee0f979f6979469fd.png\"></p>\n<h2 id=\"4-常用命令\"><a href=\"#4-常用命令\" class=\"headerlink\" title=\"4 常用命令\"></a>4 常用命令</h2><h4 id=\"4-1-软件管理\"><a href=\"#4-1-软件管理\" class=\"headerlink\" title=\"4.1 软件管理\"></a>4.1 软件管理</h4><p>apt是一个Shell 前端软件包管理器，提供软件包的安装、更新和卸载等功能，使用apt命令需要root权限。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 以git为例</span><br><span class=\"line\"># 检查可用的软件包更新</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装</span><br><span class=\"line\">sudo apt install git</span><br><span class=\"line\"></span><br><span class=\"line\"># 卸载</span><br><span class=\"line\">sudo apt remove git </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-文件处理\"><a href=\"#4-2-文件处理\" class=\"headerlink\" title=\"4.2 文件处理\"></a>4.2 文件处理</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 新建文件</span><br><span class=\"line\">touch filename.suffix</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建目录，-p：确保目录名称存在，不存在的就建一个，可以用来创建多层目录</span><br><span class=\"line\">mkdir -p app/src/main</span><br><span class=\"line\"></span><br><span class=\"line\"># 移动文件</span><br><span class=\"line\">mv [options] sourcefile directory</span><br><span class=\"line\"></span><br><span class=\"line\"># 重命名</span><br><span class=\"line\">mv [options] oldname newname</span><br><span class=\"line\"></span><br><span class=\"line\"># 复制文件</span><br><span class=\"line\">cp [options] sourcefile directory</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除文件，-r：删除包括所有子文件，-f：直接删除，谨慎使用rm -rf</span><br><span class=\"line\">rm filename</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-解压文件\"><a href=\"#4-3-解压文件\" class=\"headerlink\" title=\"4.3 解压文件\"></a>4.3 解压文件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ​.tar.gz 和 .tgz​格式</span><br><span class=\"line\">$ tar zxvf FileName.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">#.zip格式</span><br><span class=\"line\">unzip FileName.zip</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-创建root用户\"><a href=\"#4-4-创建root用户\" class=\"headerlink\" title=\"4.4 创建root用户\"></a>4.4 创建root用户</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建root用户，依照提示输入密码</span><br><span class=\"line\">sudo passwd root</span><br><span class=\"line\"></span><br><span class=\"line\">#进入root用户</span><br><span class=\"line\">su root</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-5-同步时间\"><a href=\"#4-5-同步时间\" class=\"headerlink\" title=\"4.5 同步时间\"></a>4.5 同步时间</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看时间</span><br><span class=\"line\">date</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用ntpdate同步网络时间</span><br><span class=\"line\">sudo apt install ntpdate</span><br><span class=\"line\"></span><br><span class=\"line\"># 从cn.pool.ntp.org服务器同步网络时间</span><br><span class=\"line\">ntpdate -u cn.pool.ntp.org</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-6-查找文件里符合条件的字符串\"><a href=\"#4-6-查找文件里符合条件的字符串\" class=\"headerlink\" title=\"4.6 查找文件里符合条件的字符串\"></a>4.6 查找文件里符合条件的字符串</h4><p>在当前文件夹下搜索文件里面的字符内容，-r表示递归查找子目录中的文件，-w表示只显示全字符合的列</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -rw &quot;search&quot; </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-7-vim-简单使用\"><a href=\"#4-7-vim-简单使用\" class=\"headerlink\" title=\"4.7 vim 简单使用\"></a>4.7 vim 简单使用</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 打开文件</span><br><span class=\"line\">vim filename.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># 编辑文件</span><br><span class=\"line\"># 1.打开文件后默认命令模式，按“i”进入编辑模式</span><br><span class=\"line\"># 2.编辑完成，按“esc”返回命令模式，此时可以进行保存等操作</span><br><span class=\"line\"></span><br><span class=\"line\"># 退出文件</span><br><span class=\"line\"># 1.保存并退出</span><br><span class=\"line\">:wq</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.放弃修改并退出</span><br><span class=\"line\">:q!</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-8-其他\"><a href=\"#4-8-其他\" class=\"headerlink\" title=\"4.8 其他\"></a>4.8 其他</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 修改所有用户组对文件的权限为最高权限(可读可写可执行）</span><br><span class=\"line\">chmod -R 777 filename </span><br><span class=\"line\"></span><br><span class=\"line\"># 查看文件的内容，输出到终端</span><br><span class=\"line\">cat filename</span><br><span class=\"line\"></span><br><span class=\"line\"># 将终端内容输出到文件，免去手动复制终端内容</span><br><span class=\"line\">script -f -a /path/log.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>&emsp;&emsp;以上便是Ubuntu从虚拟机配置参数讲解到Ubuntu安装的全过程，以及一些个人认为比较实用的使用技巧。至于命令，如果是体验Linux记不住也没关系，当你有实际需求时，例如交叉编译源码，你会记住的。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"Ubuntu-22-04安装教程及使用技巧\"><a href=\"#Ubuntu-22-04安装教程及使用技巧\" class=\"headerlink\" title=\"Ubuntu 22.04安装教程及使用技巧\"></a>Ubuntu 22.04安装教程及使用技巧</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>&emsp;&emsp;通常所说的 Linux 其是指Linux内核，Linux 系统是指基于 Linux 内核的操作系统的泛称，而不是一个具体的操作系统。Ubuntu 则是 Linux 其中一个发行版，其他比较知名的还有 Debian、Fedora、CentOS等。<br/><br>&emsp;&emsp;作为程序员，我们可以用使用 Ubuntu 系统来体验 Linux、 熟悉命令行操作、部署服务器、搭建梯子和交叉编译，如编译 Android 项目所需的so库，编译 Android 系统源码等等。本文将面向新手介绍在 VMware 中安装和配置 Ubuntu 的过程，以及一些常用的技巧和命令。</p>\n<p>本文所用环境</p>\n<ul>\n<li>VMware Workstation 17 Pro</li>\n<li>Ubuntu 22.04.3 LTS Desktop 64-bit</li>\n</ul>\n<h2 id=\"1-下载镜像\"><a href=\"#1-下载镜像\" class=\"headerlink\" title=\"1 下载镜像\"></a>1 下载镜像</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Ubuntu官方网站</span><br><span class=\"line\">https://cn.ubuntu.com/download/desktop</span><br></pre></td></tr></table></figure>\n<p>在Ubuntu官网下iso镜像文件，同时也可看到官方推荐的Ubuntu配置要求<br><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7ff944fe4d14327b69e05f19b442e53~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=189&s=419018&e=png&b=f6f5f5\" alt=\"image.png\"></p>\n<h2 id=\"2-安装\"><a href=\"#2-安装\" class=\"headerlink\" title=\"2 安装\"></a>2 安装</h2><h3 id=\"2-1-VMware虚拟机安装\"><a href=\"#2-1-VMware虚拟机安装\" class=\"headerlink\" title=\"2.1 VMware虚拟机安装\"></a>2.1 VMware虚拟机安装</h3><p>如果对性能要求不是很严格，通常选择在虚拟机环境中使用Ubuntu即可。如果有一台电脑专门用来安装Ubuntu，则跟Windows重装系统的前置步骤是一样的：制作Ubuntu的U盘启动盘-&gt;bios设置U盘启动-&gt;进入菜单开始安装，这里主要讲虚拟机的安装方式。<br>ps：VMware Workstation 有Player和pro两款，pro功能更多，带有快照功能。</p>\n<ol>\n<li>打开VMware，选择新建虚拟机-&gt;自定义，方便我们进行详细配置</li>\n</ol>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/327abb2bc1324ac8885814beb99f82f8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=fbfbfb\" alt=\"image.png\"></p>\n<p>2. 点击下一步，虚拟机兼容性保持默认</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/deecba778054403582011c776448583a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f1f1f1\" alt=\"image.png\"></p>\n<p>3. 安装来源区别就是，选择Ubuntu镜像文件会自动开启简易安装，默认开启英文的Ubuntu安装引导，这里选择“稍后安装操作系统”</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cb1a7e60ec345fdb37cfcffd05213f2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f0f0f0\" alt=\"image.png\"></p>\n<p>4. 根据下载的镜像文件选择操作系统类型Linux，默认下载的是64位镜像</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c6ed3c13ffa4a5eb9eaf2257bafb2a8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f0f0f0\" alt=\"image.png\"></p>\n<p>5. 选择安装位置，如果是需要进行编译等需要频繁读写磁盘的操作，强烈建议安装到SSD硬盘。</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8037f487f01c462a93f476c7ede2cc46~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f3f3f3\" alt=\"image.png\"></p>\n<p>6. 选择CPU配置</p>\n<ul>\n<li>处理器数量 ：想要虚拟的CPU颗数。对应物理主机的cpu插槽数，除了多路服务器，家用机一般一个U，</li>\n<li>每个处理器的内核数量：想要虚拟的CPU内核数。对应物理主机的超线程支持的线程数</li>\n<li>处理器内核总数：处理器数量x每个处理器的内核数量</li>\n</ul>\n<p>总的原则是：虚拟机处理器内核总数：&lt; 物理主机CPU实际的线程数，例如对于6核12线程的cpu能使用的最大处理器内核总数为12个</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc948e1ec94748eab5d5ed503f975a70~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2\" alt=\"image.png\"></p>\n<p>7. 内存选择。根据需求选择，没什么需求就按默认推荐的4GB</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1d8a2758aec4aa995c52575aff1df68~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2\" alt=\"image.png\"></p>\n<p>8. 网络选择，这里选择NAT模式或者桥接都可以。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e3128ab236be4f2d96a4589a618fbf5e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2\" alt=\"image.png\"></p>\n<p>模式区别如下：</p>\n<ul>\n<li>桥接模式：虚拟机加入宿主机所在的网络，允许访问Internet互联网（当然宿主机必须可以访问互联网才行）。可以将虚拟机看做一台新电脑，主机、虚拟机和其他电脑三者通过所在局域网，互联互通。</li>\n<li>NAT模式：虚拟机和宿主机组成小局域网，互联互通。虚拟机通过宿主机访问外部网络（此时宿主机起到路由器作用），但外部网络不能访问虚拟机。</li>\n<li>仅主机模式：宿主机与虚拟机组成一个封闭的局域网，虚拟机不能访问外部网络、互联网，外部网络也不能访问虚拟机。</li>\n</ul>\n<ol start=\"9\">\n<li>磁盘选择，IO控制器和虚拟磁盘类型选择软件推荐即可，影响不大，主要是选择磁盘大小，装Ubuntu建议20G以上，后期也可扩容。</li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aabb363e547845338dc46bf692cfd709~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f1f1f1\" alt=\"image.png\"></p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b1b1d08b910468baf7ca9b446afd674~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f2f2f2\" alt=\"image.png\"></p>\n<p>10. 添加Ubuntu系统镜像文件<br>点击自定义硬件-&gt;添加，在添加硬件向导窗口选择“CD&#x2F;DVD驱动器”并按确认。点击CD&#x2F;DVD驱动器，在“使用ISO影像文件”选择前面下载的iso文件</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90ed3831a1734cfb849c0d378e430138~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=513&h=440&s=904864&e=png&b=f6f6f6\" alt=\"image.png\"></p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7ec64c2071624c29a8ae8fb93d1cded3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=234&s=519698&e=png&b=fbfbfb\" alt=\"image.png\"></p>\n<p>至此，VMware Ubuntu虚拟机配置部分已经完成，下面开始安装Ubuntu。<br><br/></p>\n<h3 id=\"2-2-安装Ubuntu系统\"><a href=\"#2-2-安装Ubuntu系统\" class=\"headerlink\" title=\"2.2 安装Ubuntu系统\"></a>2.2 安装Ubuntu系统</h3><p>从VMware中选择刚才新建的虚拟机，点击“开启此虚拟机”。虚拟机运行后选择（按回车）“Try or Install Ubuntu”</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8eb37f981da44efa836345c8b38458a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=306&s=679575&e=png&b=020202\" alt=\"image.png\"></p>\n<ol>\n<li>选择系统语言，这里为了方便演示安装过程选择中文，安装好之后系统就是中文的了，不过主文件下的目录也是中文命名（强迫症震怒），然后点击“安装Ubuntu”</li>\n</ol>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84223b5fd073413a87783263aebf4f9c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=f8f7f7\" alt=\"image.png\"></p>\n<ol start=\"2\">\n<li>选择键盘布局</li>\n</ol>\n<p>如果这里这里没有显示“继续”按钮，可能是Ubuntu的分辨率不对导致显示不全，可以关闭安装引导窗口，右键选择“Display Setting”-&gt;Resolution重新选择分辨率即可</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d16b9f66535440d48bbcd5c233e0dfc3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=faf9f9\" alt=\"image.png\"></p>\n<ol start=\"3\">\n<li>软件更新选择，按需或随意</li>\n</ol>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bd1309f47e354276afd9fa1705223bae~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=553&h=346&s=767018&e=png&b=f9f9f9\" alt=\"image.png\"></p>\n<ol start=\"4\">\n<li>安装类型，可以选择自动分区，清除整个磁盘并安装Ubuntu，由于前面在VMware选择的是虚拟磁盘，可以大胆继续，不会对物理磁盘有影响。</li>\n</ol>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c19020789a9e43ff90ad23f260e1b714~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=501&s=1112591&e=png&b=abaaaa\" alt=\"image.png\"></p>\n<ol start=\"5\">\n<li>选择时区，点击地图选择上海就是<strong>UTC+8</strong>。（为什么没有Asia&#x2F;Beijing？这个大概是中国时区划分的历史原因了，一直没有更新）</li>\n</ol>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aa853c4d979e4de4a7e1205006edb4ec~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=497&s=1103711&e=png&b=fafafa\" alt=\"image.png\"></p>\n<ol start=\"6\">\n<li>设置信息和密码</li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7687c58d4f94446bb4c6d5343616461e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=501&s=1112591&e=png&b=f9f9f9\" alt=\"image.png\"></p>\n<ol start=\"7\">\n<li>等待安装并重启</li>\n</ol>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c54c7cfbee141fc9312d7b0b243650b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=421&s=934942&e=png&b=5f1a3f\" alt=\"image.png\"></p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/933a2c1e878f4b53b7e2a92545eb8026~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=554&h=415&s=921623&e=png&b=6b1d4c\" alt=\"image.png\"></p>\n<ol start=\"8\">\n<li>完成~</li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/48f458c8eb9e49ec8f71f330c2547293~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=816&h=545&s=434735&e=png&b=822855\" alt=\"1702280297691.png\"></p>\n<h2 id=\"3-使用技巧\"><a href=\"#3-使用技巧\" class=\"headerlink\" title=\"3 使用技巧\"></a>3 使用技巧</h2><h4 id=\"3-1-切换系统语言为中文\"><a href=\"#3-1-切换系统语言为中文\" class=\"headerlink\" title=\"3.1 切换系统语言为中文\"></a>3.1 切换系统语言为中文</h4><p>如果安装过程选择的是英文，可以通过以下方式切换到中文：<br>右键选择”Display Settings”-&gt;左侧菜单栏切换到”Region&amp;Language”-&gt;在”Language”选项中选择”Chinese”,重启完成<br>如果没有中文选择，则选择Manage Installed Languages 安装中文语言包</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ceb2b0c3e5ef43339a243867b71c4a0f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=806&h=481&s=43203&e=png&b=fafafa\" alt=\"6b5198bad92d57352d2af16f7b0208b.png\"></p>\n<h4 id=\"3-2-换源\"><a href=\"#3-2-换源\" class=\"headerlink\" title=\"3.2 换源\"></a>3.2 换源</h4><p>系统默认的软件源服务器位于国外，如果出现下载软件包很慢或者无法下载的问题，可以将官方源替换成国内镜像源或者设置科学上网以提高软件下载和安装的速度。</p>\n<p>打开系统设置-&gt;关于-&gt;软件更新-&gt;Ubuntu软件，点击“下载自:”-&gt;其他，选择国内的源或者通过“测试最佳服务器”选择网络连接更稳定的源</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/56e1d9e1fdd54836baf7584305771a6e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=706&h=664&s=74817&e=png&b=d0d0d0\" alt=\"1702281722636.png\"></p>\n<h4 id=\"3-3-虚拟机使用主机的网络代理\"><a href=\"#3-3-虚拟机使用主机的网络代理\" class=\"headerlink\" title=\"3.3 虚拟机使用主机的网络代理\"></a>3.3 虚拟机使用主机的网络代理</h4><p>如果主机配置了科学上网，可以通过如下方式使虚拟机也连接上代理，这里以v2ray为例：</p>\n<ol>\n<li>v2ray参数设置勾选“允许来自局域网的连接”</li>\n<li>Ubuntu设置-网络-网络代理，填写Http、Https、Socks设置，</li>\n</ol>\n<p>其中IP地址是主机的IP地址（“以太网适配器-以太网”），端口号是v2ray窗口底部导航栏“局域网[socks:xxxx][http:xxxy]”中的端口号，虚拟机网卡选桥接还是NAT都可以，v2ray也不用选全局路由。</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5600d45ebe024c87a7972706f0b63d3b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=980&h=579&s=59461&e=png&b=cdcdcd\" alt=\"1702282703329.png\"></p>\n<h4 id=\"3-4-Ubuntu与宿主机互相复制文本或文件\"><a href=\"#3-4-Ubuntu与宿主机互相复制文本或文件\" class=\"headerlink\" title=\"3.4 Ubuntu与宿主机互相复制文本或文件\"></a>3.4 Ubuntu与宿主机互相复制文本或文件</h4><p>如果是Ubuntu server 可以使用lrzsz或其他ftp工具进行文件的上传或下载，在VMware中有更方便的插件<br>：VMware Tools，不过兼容性不好，更推荐使用open-vm-tools，如果是桌面版使用open-vm-tools-desktop功能更多</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 检查是否安装open-vm-tools有则卸载</span><br><span class=\"line\">sudo apt remove open-vm-tools</span><br><span class=\"line\"># 安装open-vm-tools-desktop</span><br><span class=\"line\">sudo apt install open-vm-tools-desktop</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-5-配置环境变量\"><a href=\"#3-5-配置环境变量\" class=\"headerlink\" title=\"3.5 配置环境变量\"></a>3.5 配置环境变量</h4><p>.bashrc文件是用于储存用户的终端配置，包括环境变量等，以配置java环境变量为例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 检查是否安装jdk</span><br><span class=\"line\">java -version</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装openjdk-11</span><br><span class=\"line\">sudo apt-get install openjdk-11-jdk</span><br><span class=\"line\"></span><br><span class=\"line\"># 打开bashrc文件</span><br><span class=\"line\">sudo gedit ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">#在最后一行加上:</span><br><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64</span><br><span class=\"line\">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\"></span><br><span class=\"line\"># 使环境变量马上生效</span><br><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-6-快照功能\"><a href=\"#3-6-快照功能\" class=\"headerlink\" title=\"3.6 快照功能\"></a>3.6 快照功能</h4><p>快照功能是一个非常实用的功能，类似系统的还原点，不管如何瞎折腾都可以将操作系统快速还原到某个时刻，一般在搭好环境后就可以打个快照。VMware也提供了快照管理功能，位置在菜单栏“虚拟机”-&gt;快照。</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2f1c9b80fc274118a0ba2b7b22ce85f1~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=935&h=442&s=219302&e=png&b=f1f0f0\" alt=\"3f064fcf1a767f77f100639ff75c48a.png\"></p>\n<h4 id=\"3-7-磁盘扩容\"><a href=\"#3-7-磁盘扩容\" class=\"headerlink\" title=\"3.7 磁盘扩容\"></a>3.7 磁盘扩容</h4><p>当Ubuntu的磁盘空间不足时，可以通过扩容的方式（当然物理硬盘还有剩余空间）增加磁盘大小。可以通过<strong>df -h</strong>查看当前磁盘状态。我们使用的是Ubuntu desktop，可以直接通过软件界面进行调整。<br>例如当初分配给Ubuntu的硬盘大小只有25G，现在扩容到30G：</p>\n<ul>\n<li>点击“编辑虚拟机设置”-&gt;硬件-&gt;硬盘-&gt;扩展，设置新容量大小</li>\n<li>Ubuntu侧边栏的显示应用程序-&gt;工具文件夹-&gt;“磁盘”应用，点击Hard Disk，可以发现多了一块未分配空间，<br>在需要扩容的分区点击齿轮图标选择调整大小，输入调整的大小并确认。</li>\n</ul>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/103aebe81b11419392b91b437b9769b2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=896&h=516&s=121387&e=png&b=f8f7f7\" alt=\"image.png\"><br><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3526b065ca6e4f89897133ca0d7747f2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=902&h=601&s=93392&e=png&b=d6d6d6\" alt=\"338dee9d28573dee0f979f6979469fd.png\"></p>\n<h2 id=\"4-常用命令\"><a href=\"#4-常用命令\" class=\"headerlink\" title=\"4 常用命令\"></a>4 常用命令</h2><h4 id=\"4-1-软件管理\"><a href=\"#4-1-软件管理\" class=\"headerlink\" title=\"4.1 软件管理\"></a>4.1 软件管理</h4><p>apt是一个Shell 前端软件包管理器，提供软件包的安装、更新和卸载等功能，使用apt命令需要root权限。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 以git为例</span><br><span class=\"line\"># 检查可用的软件包更新</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装</span><br><span class=\"line\">sudo apt install git</span><br><span class=\"line\"></span><br><span class=\"line\"># 卸载</span><br><span class=\"line\">sudo apt remove git </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-文件处理\"><a href=\"#4-2-文件处理\" class=\"headerlink\" title=\"4.2 文件处理\"></a>4.2 文件处理</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 新建文件</span><br><span class=\"line\">touch filename.suffix</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建目录，-p：确保目录名称存在，不存在的就建一个，可以用来创建多层目录</span><br><span class=\"line\">mkdir -p app/src/main</span><br><span class=\"line\"></span><br><span class=\"line\"># 移动文件</span><br><span class=\"line\">mv [options] sourcefile directory</span><br><span class=\"line\"></span><br><span class=\"line\"># 重命名</span><br><span class=\"line\">mv [options] oldname newname</span><br><span class=\"line\"></span><br><span class=\"line\"># 复制文件</span><br><span class=\"line\">cp [options] sourcefile directory</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除文件，-r：删除包括所有子文件，-f：直接删除，谨慎使用rm -rf</span><br><span class=\"line\">rm filename</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-解压文件\"><a href=\"#4-3-解压文件\" class=\"headerlink\" title=\"4.3 解压文件\"></a>4.3 解压文件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ​.tar.gz 和 .tgz​格式</span><br><span class=\"line\">$ tar zxvf FileName.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">#.zip格式</span><br><span class=\"line\">unzip FileName.zip</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-创建root用户\"><a href=\"#4-4-创建root用户\" class=\"headerlink\" title=\"4.4 创建root用户\"></a>4.4 创建root用户</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建root用户，依照提示输入密码</span><br><span class=\"line\">sudo passwd root</span><br><span class=\"line\"></span><br><span class=\"line\">#进入root用户</span><br><span class=\"line\">su root</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-5-同步时间\"><a href=\"#4-5-同步时间\" class=\"headerlink\" title=\"4.5 同步时间\"></a>4.5 同步时间</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看时间</span><br><span class=\"line\">date</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用ntpdate同步网络时间</span><br><span class=\"line\">sudo apt install ntpdate</span><br><span class=\"line\"></span><br><span class=\"line\"># 从cn.pool.ntp.org服务器同步网络时间</span><br><span class=\"line\">ntpdate -u cn.pool.ntp.org</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-6-查找文件里符合条件的字符串\"><a href=\"#4-6-查找文件里符合条件的字符串\" class=\"headerlink\" title=\"4.6 查找文件里符合条件的字符串\"></a>4.6 查找文件里符合条件的字符串</h4><p>在当前文件夹下搜索文件里面的字符内容，-r表示递归查找子目录中的文件，-w表示只显示全字符合的列</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -rw &quot;search&quot; </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-7-vim-简单使用\"><a href=\"#4-7-vim-简单使用\" class=\"headerlink\" title=\"4.7 vim 简单使用\"></a>4.7 vim 简单使用</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 打开文件</span><br><span class=\"line\">vim filename.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># 编辑文件</span><br><span class=\"line\"># 1.打开文件后默认命令模式，按“i”进入编辑模式</span><br><span class=\"line\"># 2.编辑完成，按“esc”返回命令模式，此时可以进行保存等操作</span><br><span class=\"line\"></span><br><span class=\"line\"># 退出文件</span><br><span class=\"line\"># 1.保存并退出</span><br><span class=\"line\">:wq</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.放弃修改并退出</span><br><span class=\"line\">:q!</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-8-其他\"><a href=\"#4-8-其他\" class=\"headerlink\" title=\"4.8 其他\"></a>4.8 其他</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 修改所有用户组对文件的权限为最高权限(可读可写可执行）</span><br><span class=\"line\">chmod -R 777 filename </span><br><span class=\"line\"></span><br><span class=\"line\"># 查看文件的内容，输出到终端</span><br><span class=\"line\">cat filename</span><br><span class=\"line\"></span><br><span class=\"line\"># 将终端内容输出到文件，免去手动复制终端内容</span><br><span class=\"line\">script -f -a /path/log.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>&emsp;&emsp;以上便是Ubuntu从虚拟机配置参数讲解到Ubuntu安装的全过程，以及一些个人认为比较实用的使用技巧。至于命令，如果是体验Linux记不住也没关系，当你有实际需求时，例如交叉编译源码，你会记住的。</p>\n"},{"title":"Hello World","abbrlink":"4a17b156","_content":"欢迎使用 [Hexo](https://hexo.io/)！这是你的第一篇文章。查看 [文档](https://hexo.io/docs/) 获取更多信息。如果在使用 Hexo 过程中遇到任何问题，你可以在 [故障排除](https://hexo.io/docs/troubleshooting.html) 中找到答案，或者在 [GitHub](https://github.com/hexojs/hexo/issues) 上向我提问。\n\n## 快速开始\n\n### 创建新文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### 运行服务器\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 部署到远程站点\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_drafts/hello-world.md","raw":"---\ntitle: Hello World\ncategories: 技术\ntags:\n  - Hexo\nabbrlink: 4a17b156\n---\n欢迎使用 [Hexo](https://hexo.io/)！这是你的第一篇文章。查看 [文档](https://hexo.io/docs/) 获取更多信息。如果在使用 Hexo 过程中遇到任何问题，你可以在 [故障排除](https://hexo.io/docs/troubleshooting.html) 中找到答案，或者在 [GitHub](https://github.com/hexojs/hexo/issues) 上向我提问。\n\n## 快速开始\n\n### 创建新文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### 运行服务器\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 部署到远程站点\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":0,"date":"2023-12-15T02:01:00.628Z","updated":"2023-12-17T11:20:32.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqc6duq20003tgka68lwh56g","content":"<p>欢迎使用 <a href=\"https://hexo.io/\">Hexo</a>！这是你的第一篇文章。查看 <a href=\"https://hexo.io/docs/\">文档</a> 获取更多信息。如果在使用 Hexo 过程中遇到任何问题，你可以在 <a href=\"https://hexo.io/docs/troubleshooting.html\">故障排除</a> 中找到答案，或者在 <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a> 上向我提问。</p>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"创建新文章\"><a href=\"#创建新文章\" class=\"headerlink\" title=\"创建新文章\"></a>创建新文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"运行服务器\"><a href=\"#运行服务器\" class=\"headerlink\" title=\"运行服务器\"></a>运行服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"部署到远程站点\"><a href=\"#部署到远程站点\" class=\"headerlink\" title=\"部署到远程站点\"></a>部署到远程站点</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>欢迎使用 <a href=\"https://hexo.io/\">Hexo</a>！这是你的第一篇文章。查看 <a href=\"https://hexo.io/docs/\">文档</a> 获取更多信息。如果在使用 Hexo 过程中遇到任何问题，你可以在 <a href=\"https://hexo.io/docs/troubleshooting.html\">故障排除</a> 中找到答案，或者在 <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a> 上向我提问。</p>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"创建新文章\"><a href=\"#创建新文章\" class=\"headerlink\" title=\"创建新文章\"></a>创建新文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"运行服务器\"><a href=\"#运行服务器\" class=\"headerlink\" title=\"运行服务器\"></a>运行服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"部署到远程站点\"><a href=\"#部署到远程站点\" class=\"headerlink\" title=\"部署到远程站点\"></a>部署到远程站点</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"测试文章","abbrlink":"7a6a6b5a","date":"2023-12-15T02:15:47.000Z","_content":"## 这是一篇测试文章\n\n{% asset_img avatar.jpg 图片引用方法一 %}\n\n![图片引用方法二](./测试文章/avatar.jpg)\n\n![图片引用方法三](avatar.jpg)\n![图片引用方法四](测试文章/avatar.jpg)","source":"_drafts/测试文章.md","raw":"---\ntitle: 测试文章\nabbrlink: 7a6a6b5a\ndate: 2023-12-15 10:15:47\ntags:\n---\n## 这是一篇测试文章\n\n{% asset_img avatar.jpg 图片引用方法一 %}\n\n![图片引用方法二](./测试文章/avatar.jpg)\n\n![图片引用方法三](avatar.jpg)\n![图片引用方法四](测试文章/avatar.jpg)","slug":"测试文章","published":0,"updated":"2023-12-18T01:24:14.834Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqc6duq50006tgkadpckdrmq","content":"<h2 id=\"这是一篇测试文章\"><a href=\"#这是一篇测试文章\" class=\"headerlink\" title=\"这是一篇测试文章\"></a>这是一篇测试文章</h2>\n\n<p><img src=\"/./%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/avatar.jpg\" alt=\"图片引用方法二\"></p>\n<p><img src=\"/avatar.jpg\" alt=\"图片引用方法三\"><br><img src=\"/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/avatar.jpg\" alt=\"图片引用方法四\"></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"这是一篇测试文章\"><a href=\"#这是一篇测试文章\" class=\"headerlink\" title=\"这是一篇测试文章\"></a>这是一篇测试文章</h2>\n\n<p><img src=\"/./%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/avatar.jpg\" alt=\"图片引用方法二\"></p>\n<p><img src=\"/avatar.jpg\" alt=\"图片引用方法三\"><br><img src=\"/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/avatar.jpg\" alt=\"图片引用方法四\"></p>\n"},{"title":"GitHub Pages + Hexo搭建个人博客网站","abbrlink":"hxpghblog","_content":"# GitHub Pages + Hexo搭建个人博客网站\n## 前言 \n&emsp;&emsp;Hexo 是一个基于 Node.js 构建的静态博客框架。它能够根据 Markdown 文件生成静态的 HTML 网页，方便快速搭建静态网站。\nGitHub Pages 是 GitHub 提供的一项上免费托管和发布静态网站的服务，有了它可以省去自己购买和维护服务器的成本。  \n如果你想搭建一个个人网站或者博客，GitHub Pages + Hexo是一个不错且主流的方案。你只需要掌握一点markdown语法和git使用配合教程就可以快速上手，同时这也是本站的搭建过程~\n\n#### 本文环境 \n* Win 10\n* NodeJS v21.4.0\n* git\n\n## 1 安装软件\n### 1.1 安装NodeJS\n* 在[NodeJS官网](https://nodejs.org/zh-cn/download/)下载安装包并安装\n* 配置环境变量，如果选择的是msi格式的安装包会自动添加环境变量\n\n### 1.2 安装 Hexo\n新建一个文件夹作为你网站的根目录，在当前目录打开命令提示符（在地址栏输入\"cmd\"），使用以下命令安装Hexo\n```\n# 使用 npm 安装 Hexo\nnpm install -g hexo-cli\n\n# 查看版本\nhexo -v\n```\n### 1.3 创建一个hexo项目并初始化\n```\n# 初始化一个名为\"hexo-blog\"的 Hexo 项目\nhexo init hexo-blog\n\ncd hexo-blog\n\n# 安装 Hexo 项目所需的依赖包\nnpm install\n\n```\nHexo 初始化完成后，会生成一个包含基本文件和目录的项目结构\n```\nhexo-blog/         # 项目根目录\n|-- _config.yml    # 主配置文件\n|-- node_modules/  # Node.js 模块目录，通过 npm install 安装\n|-- public/        # 自动生成的静态文件，部署时上传到服务器\n|-- scaffolds/     # 模版文件\n|-- source/        # 存放源文件的目录，包括文章、图片等\n|   |-- _drafts/   # 草稿目录，未发布的文章\n|   |-- _posts/    # 存放正式发布的文章\n|-- themes/        # 存放主题的目录\n|-- .gitignore     # Git 版本控制的忽略文件列表\n|-- package.json   # 项目的 Node.js 包配置文件\n\n```\n## 2 Hexo配置\nhexo-blog/_config.yml是heox的主配置文件，用来定义博客的各种设置和选项，包括站点设置、目录设置、部署设置等等，下面是一些重要的配置选项：\nps：yaml是一个方便人类阅读的数据序列化格式，通常用来做配置文件，主要用缩进来表示层次结构，另外注意\"key: value\"的value前面有一个空格\n### 2.1 网站Site信息\n* 打开_config.yml主配置文件，找到site字段，修改网站基本信息\n```\n# Site\ntitle: # 网站标题\nsubtitle: \ndescription: # 网站副标题\nkeywords:\nauthor: # 网站作者\nlanguage: zh-CN  # 指定语言，会影响主题显示的语言，按需修改\ntimezone: ''\n```\n### 2.2 开启文章资源文件夹（可选/推荐）\n\n```\n# 通过 hexo new [layout] <title> 命令创建新文章时自动创建同名文件夹\npost_asset_folder: true\n```\n### 2.3 配置永久链接（可选/推荐）\nHexo 默认的链接格式是permalink: :year/:month/:day/:title/，配置永久链接有助于优化网站的 SEO：\n```\n# 安装插件\nnpm install hexo-abbrlink --save\n```\n修改主配置\n```\npermalink: :abbrlink/ #文章的永久链接 \nabbrlink:\n  alg: crc32  #算法: crc16(default) and crc32\n  rep: hex    #进制: dec(default) and hex\n```\n\n* 更多配置字段参考[Hexo配置](https://hexo.io/zh-cn/docs/configuration)\n\n### 2.4 预览效果\n打开命令提示符，输入以下命令启动hexo本地服务器\n```\nhexo g\nhexo server\n```\n* 浏览器访问 http://localhost:4000，即可看到默认的主题风格，同时可以看到hexo默认生成了一篇名为“Hello World”的文章。\n\n![默认主题的预览效果](/images/article01/70321.png)\n\n### 3 Hexo 使用\n\n### 3.1 写作\n#### 3.1.1 编辑文章\nsource/_posts 目录是用于存放博客文章的地方，每篇博客文章对应一个 Markdown 文件。可以通过在创建和编辑文章也可以使用命令\n```\nhexo new post <title>\n```\n* 打开使用命令创建好的文章，在文件最上方有一块以 --- 分隔的区域，称为[Front-matter ](https://hexo.io/zh-cn/docs/front-matter)，作用是配置文章标题、日期、分类、标签等属性。\n#### 3.1.2 草稿箱\n在编辑过程中如果需要将文件作为草稿而不是直接发布，可以使用drafts。source/_drafts 文件夹用于存放草稿，等到完成并决定发布时再将其移动到 source/_posts 文件夹或者使用命令进行发布\n```\n# 创建一个新的草稿\nhexo new draft <title>\n\n# 将草稿发布为正式文章\nhexo publish draft <title>\n```\n\n#### 3.1.3 文章中插入图片\n* 方式1：使用markdown标签\n```\n# 外链\n![图片描述](url)\n\n# 相对于博客的根目录：source/imgs/a.jpg\n![图片描述](/imgs/a.jpg)\n\n# Hexo 配置文件 _config.yaml 将 post_asset_folder 选项设为 true,hexo new xxx 新建文章时，Hexo 便会在 source/_posts 目录下新建与文章同名的文件夹\n# 相对于某篇文章的目，例如./article_1/a.jpg的目录\n![图片描述](a.jpg)\n```\n\n* 方式2：使用 Hexo asset_img 标签\n```\n{% asset_img example.jpg This is an example image %}\n```\n缺点：无法在 Markdown 编辑器中正常显示图片\n改进：插件hexo-renderer-marked解决了这个问题\n可以只用npm install hexo-renderer-marked命令直接安装，之后在config.yaml中更改配置如下：\n```\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n### 3.2 启动预览服务器\n博客文章表写好就可以进行发布了，hexo提供了本地预览服务器，上一步预览效果的时候已经启动过服务器，以下是相关的命令解释：\n```\n# 清除缓存文件，在某些情况（尤其是更换主题后），如果对站点的更改无论如何也不生效可能用到\n# hexo clean\n\n# 将md和配置等源文件生成网页静态文件，存储到public目录，简写成hexo g\nhexo generate \n\n# 启动服务器 默认访问地址： http://localhost:4000/\nhexo server\n\n```\n* 可以将指令编写到批处理文件，省去每次输入命令:\n在项目根目录创建start_server.bat文件，添加以下内容并保存，之后通过双击运行来启动服务器。\n```\n@echo off\necho Stopping Hexo server...\ntaskkill /IM \"node.exe\" /F\necho Hexo server stopped.\n\necho Starting Hexo server...\nhexo clean && hexo g && hexo server \necho Hexo server started.\n```\n\n### 3.3 部署到服务器\n以上只是本地预览，想要别人访问得到这个博客，还需要部署到服务器上自己的服务器上或者GitHub Pages等托管服务。\n以下以发布到Github Pages为例：\n1. 创建github仓库\n填写仓库名，名称为\"username.github.io\"，username是你的Github用户名，仓库属性为public  \n\n如果你的 GitHub 仓库命名为 username.github.io，GitHub Pages 将会默认将站点托管在 username.github.io 这个域名下，否则会托管在username.github.io/仓库名 这个路径下\n\n2. Hexo 提供了一键部署功能，首先使用以下命令安装插件\n```\n# 安装插件用于将生成的静态网站文件（通常位于 public 目录）部署到 GitHub\nnpm install hexo-deployer-git --save\n```\n3. 修改网站配置文件\n```\ndeploy:\n  type: git  \n  repo: git@github.com:xxxx/xxxx.github.io.git # 仓库地址\n  branch: main  # 分支\n```\n4. 运行部署命令\n```\n# 一键部署\nhexo deploy \n\n# 生成静态文件并部署\nhexo g -d\n```\n浏览器访问 https://username.github.io/，部署成功，这就是你的个人博客了，Congratulations！\n\n\n## 4 更换主题\n以上我们通过Hexo和Github搭建了一个简单的博客，但是这个博客页面样式还很简陋，很多功能如访问统计、评论功能也没有，下面就开始我们博客的美（折）化（腾）之旅。\n\nHexo提供了非常多的主题供选择，可以在github 搜索\"hexo theme\"可以根据star看到比较受欢迎的主题。\n\n下面以butterfly为例子\n### 4.1 下载butterfly\n通过git clone 或者直接下载zip包并复制到项目theme目录下\n```\ngit clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n\n```\n### 4.2 应用主题\n* 修改 Hexo 根目录下的 _config.yml，把主題改为 butterfly\n```\ntheme: butterfly\n```\n### 4.3 安装渲染器插件\n 如果你沒有 pug 以及 stylus 的渲染器，可能报错\n```\nextends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug\n```\n```\n# 安装渲染器插件\nnpm install hexo-renderer-pug hexo-renderer-stylus --save\n```\n双击start_server.bat 重新启动服务器，可以看到主题效果生效了\nps：。\n\n![butterfly主题预览效果](/images/article01/70521.png)\n\n### 4.4 butterfly 主题配置\nbutterfly的配置文件在butterfly文件夹下的_config.yml，更多配置内容参考[butterfly官方教程](https://butterfly.js.org/)\nbutterfly升级主题可能会覆盖主题下的_config.yml配置文件，官方建议将butterfly主题下的配置文件重名并复制到项目根目录，在项目根目录进行配置\n\n以下是一些比较常用的配置\n#### 4.4.1 配置导航栏\nbutterfly 提供了默认的导航栏tab，只需要将menu字段下的tab去掉前面的#注释即可，形式是\"名称：链接地址 || 图标([Font Awesome](https://fontawesome.com/)\n```\nmenu:\n   首页: / || fas fa-home\n   归档: /archives/ || fas fa-archive\n   标签: /tags/ || fas fa-tags\n   分类: /categories/ || fas fa-folder-open\n  # List||fas fa-list:\n  #   Music: /music/ || fas fa-music\n  #   Movie: /movies/ || fas fa-video\n  # Link: /link/ || fas fa-link\n   关于: /about/ || fas fa-heart\n```\n#### 4.4.2 添加子页面\n刷新页面，发现导航栏已经展示出来了，但是点击其中tab，发现报错了，这是因为还没添加页面\n```\nCannot GET /about/\n```\n##### 关于页\n在项目根目录使用cmd命令\n```\nhexo new page about\n```\n使用该命令后会生成/source/about/index.md文件，打开并添加layout: about属性以及更多正文信息\n```\n---\ntitle: about\ndate: 2020-02-23 19:20:33\nlayout: about\n---\n\n这里写关于页的正文我是xxx，支持 Markdown, HTML\n\n```\n##### 分类页\n其他子页面同理，分类页创建：\n```\nhexo new page categories\n```\n同样在source/categories/index.md 这个文件添加属性type: \"categories\"\n\n##### 标签页\n```\nhexo new page tags\n```\n在 source/tags/index.md 中添加标签属性type: \"tags\"\n##### 使用标签\n在文章的开头的Front-matter区域，添加以下字段即可新增分类或者标签：\n```\ncategories: 技术\ntags:\n  - Hexo\n```\n#### 4.4.3 头像\n```\navatar:\n  img: /img/avatar.png # 头像图片\n  effect: true # 头像动效\n```\n#### 4.4.4 顶部图\n* 如果不需要显示顶部图，可直接配置 disable_top_img: true\n* 显示优先级：文章的front-matter的top_img属性 >ront-matter的 cover属性 > 配置文件的 default_top_img属性\n* 主页顶部图高度：index_top_img_height:  # 例如 300px/300em/300rem  \n\n\n#### 4.4.5 评论功能\n一般的主题都支持多个评论插件，如disqus、gitalk、valine、 waline、twikoo等\n以Valine为例，Valine需要LeanCloud支持，\n1. 登录或注册 LeanCloud，如果是国际版不需要实名认证， 进入控制台后点击左下角创建应用\n2. 应用创建好以后，进入刚刚创建的应用，选择左下角的设置>应用Key，复制APP ID和APP Key\n3. 在主题配置文件的comments字段下的user设置为Valine,valine填写AppID 和 AppKey\n```\ncomments:\n  # Up to two comments system, the first will be shown as default\n  use: Valine\n  ...\n  valine:\n  appId: # your appId\n  appKey: # your appKey\n```\n\n#### 4.4.6 访问人数和阅读统计\nbutterfly的默认调用busuanzi的进行统计，设置以下字段，刷新页面后在侧边栏的网站资讯看到本站访客数和本站总访问量。文章标题后面带有阅读量次数\n```\nbusuanzi:\n  site_uv: true\n  site_pv: true\n  page_pv: true\n```\n#### 4.4.7 字数统计\n安装插件\n```\n# wordcount字数统计插件\nnpm install hexo-wordcount --save\n```\n配置以下字段\n```\nwordcount:\n  enable: true\n  post_wordcount: true\n  min2read: true\n  total_wordcount: true\n```\n\n#### 4.4.8 分析统计\n* 以百度统计为例\n* 登录百度统计官网管理后台，使用设置->账户设置->网站列表->新增网站\n* 复制应用的统计代码中的key到配置中的baidu_analytics字段\n```\n# 填写百度统计代码的key（形如“  hm.src = \"https://hm.baidu.com/hm.js?28e4ea7748d7403e4bf35f897a5e67e0\";）\nbaidu_analytics: \n\n```\n#### 4.4.9 中文字和半形的英文、数字、符号之间插入空白\n```\n# https://github.com/vinta/pangu.js\n# Insert a space between Chinese character and English character (中英文之間添加空格)\npangu:\n  enable: false\n  field: post # site/post\n```\n\n#### 4.4.10 图片压缩\nButterfly主题需要使用到很多图片。如果图片太大，会严重拖慢网站的加载速度，以下是常用压缩工具\n* [tinypng](https://tinypng.com/)\n* caesium\n\n## 总结\n一通操作下来，相信你的博客样式已经变得称心如意了，但是优化还远不止如此，如果觉得username.github.io格调不够高可以绑定自己的域名；如果想在搜索引擎更容易搜索到自己的博客需要做SEO优化；如果图片越来越多需要优化加载速度就需要使用图床来管理图片。\n以上~\n\n## 参考资料\n[1]. Hexo : https://hexo.io/zh-cn/docs/\n[2]. Butterfly : https://butterfly.js.org/\n[3]. Valine : https://valine.js.org/quickstart.html","source":"_posts/GitHub Pages + Hexo 搭建个人博客网站.md","raw":"---\ntitle: GitHub Pages + Hexo搭建个人博客网站\ncategories: 技术\ntags:\n  - Hexo\nabbrlink: 'hxpghblog'\n---\n# GitHub Pages + Hexo搭建个人博客网站\n## 前言 \n&emsp;&emsp;Hexo 是一个基于 Node.js 构建的静态博客框架。它能够根据 Markdown 文件生成静态的 HTML 网页，方便快速搭建静态网站。\nGitHub Pages 是 GitHub 提供的一项上免费托管和发布静态网站的服务，有了它可以省去自己购买和维护服务器的成本。  \n如果你想搭建一个个人网站或者博客，GitHub Pages + Hexo是一个不错且主流的方案。你只需要掌握一点markdown语法和git使用配合教程就可以快速上手，同时这也是本站的搭建过程~\n\n#### 本文环境 \n* Win 10\n* NodeJS v21.4.0\n* git\n\n## 1 安装软件\n### 1.1 安装NodeJS\n* 在[NodeJS官网](https://nodejs.org/zh-cn/download/)下载安装包并安装\n* 配置环境变量，如果选择的是msi格式的安装包会自动添加环境变量\n\n### 1.2 安装 Hexo\n新建一个文件夹作为你网站的根目录，在当前目录打开命令提示符（在地址栏输入\"cmd\"），使用以下命令安装Hexo\n```\n# 使用 npm 安装 Hexo\nnpm install -g hexo-cli\n\n# 查看版本\nhexo -v\n```\n### 1.3 创建一个hexo项目并初始化\n```\n# 初始化一个名为\"hexo-blog\"的 Hexo 项目\nhexo init hexo-blog\n\ncd hexo-blog\n\n# 安装 Hexo 项目所需的依赖包\nnpm install\n\n```\nHexo 初始化完成后，会生成一个包含基本文件和目录的项目结构\n```\nhexo-blog/         # 项目根目录\n|-- _config.yml    # 主配置文件\n|-- node_modules/  # Node.js 模块目录，通过 npm install 安装\n|-- public/        # 自动生成的静态文件，部署时上传到服务器\n|-- scaffolds/     # 模版文件\n|-- source/        # 存放源文件的目录，包括文章、图片等\n|   |-- _drafts/   # 草稿目录，未发布的文章\n|   |-- _posts/    # 存放正式发布的文章\n|-- themes/        # 存放主题的目录\n|-- .gitignore     # Git 版本控制的忽略文件列表\n|-- package.json   # 项目的 Node.js 包配置文件\n\n```\n## 2 Hexo配置\nhexo-blog/_config.yml是heox的主配置文件，用来定义博客的各种设置和选项，包括站点设置、目录设置、部署设置等等，下面是一些重要的配置选项：\nps：yaml是一个方便人类阅读的数据序列化格式，通常用来做配置文件，主要用缩进来表示层次结构，另外注意\"key: value\"的value前面有一个空格\n### 2.1 网站Site信息\n* 打开_config.yml主配置文件，找到site字段，修改网站基本信息\n```\n# Site\ntitle: # 网站标题\nsubtitle: \ndescription: # 网站副标题\nkeywords:\nauthor: # 网站作者\nlanguage: zh-CN  # 指定语言，会影响主题显示的语言，按需修改\ntimezone: ''\n```\n### 2.2 开启文章资源文件夹（可选/推荐）\n\n```\n# 通过 hexo new [layout] <title> 命令创建新文章时自动创建同名文件夹\npost_asset_folder: true\n```\n### 2.3 配置永久链接（可选/推荐）\nHexo 默认的链接格式是permalink: :year/:month/:day/:title/，配置永久链接有助于优化网站的 SEO：\n```\n# 安装插件\nnpm install hexo-abbrlink --save\n```\n修改主配置\n```\npermalink: :abbrlink/ #文章的永久链接 \nabbrlink:\n  alg: crc32  #算法: crc16(default) and crc32\n  rep: hex    #进制: dec(default) and hex\n```\n\n* 更多配置字段参考[Hexo配置](https://hexo.io/zh-cn/docs/configuration)\n\n### 2.4 预览效果\n打开命令提示符，输入以下命令启动hexo本地服务器\n```\nhexo g\nhexo server\n```\n* 浏览器访问 http://localhost:4000，即可看到默认的主题风格，同时可以看到hexo默认生成了一篇名为“Hello World”的文章。\n\n![默认主题的预览效果](/images/article01/70321.png)\n\n### 3 Hexo 使用\n\n### 3.1 写作\n#### 3.1.1 编辑文章\nsource/_posts 目录是用于存放博客文章的地方，每篇博客文章对应一个 Markdown 文件。可以通过在创建和编辑文章也可以使用命令\n```\nhexo new post <title>\n```\n* 打开使用命令创建好的文章，在文件最上方有一块以 --- 分隔的区域，称为[Front-matter ](https://hexo.io/zh-cn/docs/front-matter)，作用是配置文章标题、日期、分类、标签等属性。\n#### 3.1.2 草稿箱\n在编辑过程中如果需要将文件作为草稿而不是直接发布，可以使用drafts。source/_drafts 文件夹用于存放草稿，等到完成并决定发布时再将其移动到 source/_posts 文件夹或者使用命令进行发布\n```\n# 创建一个新的草稿\nhexo new draft <title>\n\n# 将草稿发布为正式文章\nhexo publish draft <title>\n```\n\n#### 3.1.3 文章中插入图片\n* 方式1：使用markdown标签\n```\n# 外链\n![图片描述](url)\n\n# 相对于博客的根目录：source/imgs/a.jpg\n![图片描述](/imgs/a.jpg)\n\n# Hexo 配置文件 _config.yaml 将 post_asset_folder 选项设为 true,hexo new xxx 新建文章时，Hexo 便会在 source/_posts 目录下新建与文章同名的文件夹\n# 相对于某篇文章的目，例如./article_1/a.jpg的目录\n![图片描述](a.jpg)\n```\n\n* 方式2：使用 Hexo asset_img 标签\n```\n{% asset_img example.jpg This is an example image %}\n```\n缺点：无法在 Markdown 编辑器中正常显示图片\n改进：插件hexo-renderer-marked解决了这个问题\n可以只用npm install hexo-renderer-marked命令直接安装，之后在config.yaml中更改配置如下：\n```\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n### 3.2 启动预览服务器\n博客文章表写好就可以进行发布了，hexo提供了本地预览服务器，上一步预览效果的时候已经启动过服务器，以下是相关的命令解释：\n```\n# 清除缓存文件，在某些情况（尤其是更换主题后），如果对站点的更改无论如何也不生效可能用到\n# hexo clean\n\n# 将md和配置等源文件生成网页静态文件，存储到public目录，简写成hexo g\nhexo generate \n\n# 启动服务器 默认访问地址： http://localhost:4000/\nhexo server\n\n```\n* 可以将指令编写到批处理文件，省去每次输入命令:\n在项目根目录创建start_server.bat文件，添加以下内容并保存，之后通过双击运行来启动服务器。\n```\n@echo off\necho Stopping Hexo server...\ntaskkill /IM \"node.exe\" /F\necho Hexo server stopped.\n\necho Starting Hexo server...\nhexo clean && hexo g && hexo server \necho Hexo server started.\n```\n\n### 3.3 部署到服务器\n以上只是本地预览，想要别人访问得到这个博客，还需要部署到服务器上自己的服务器上或者GitHub Pages等托管服务。\n以下以发布到Github Pages为例：\n1. 创建github仓库\n填写仓库名，名称为\"username.github.io\"，username是你的Github用户名，仓库属性为public  \n\n如果你的 GitHub 仓库命名为 username.github.io，GitHub Pages 将会默认将站点托管在 username.github.io 这个域名下，否则会托管在username.github.io/仓库名 这个路径下\n\n2. Hexo 提供了一键部署功能，首先使用以下命令安装插件\n```\n# 安装插件用于将生成的静态网站文件（通常位于 public 目录）部署到 GitHub\nnpm install hexo-deployer-git --save\n```\n3. 修改网站配置文件\n```\ndeploy:\n  type: git  \n  repo: git@github.com:xxxx/xxxx.github.io.git # 仓库地址\n  branch: main  # 分支\n```\n4. 运行部署命令\n```\n# 一键部署\nhexo deploy \n\n# 生成静态文件并部署\nhexo g -d\n```\n浏览器访问 https://username.github.io/，部署成功，这就是你的个人博客了，Congratulations！\n\n\n## 4 更换主题\n以上我们通过Hexo和Github搭建了一个简单的博客，但是这个博客页面样式还很简陋，很多功能如访问统计、评论功能也没有，下面就开始我们博客的美（折）化（腾）之旅。\n\nHexo提供了非常多的主题供选择，可以在github 搜索\"hexo theme\"可以根据star看到比较受欢迎的主题。\n\n下面以butterfly为例子\n### 4.1 下载butterfly\n通过git clone 或者直接下载zip包并复制到项目theme目录下\n```\ngit clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n\n```\n### 4.2 应用主题\n* 修改 Hexo 根目录下的 _config.yml，把主題改为 butterfly\n```\ntheme: butterfly\n```\n### 4.3 安装渲染器插件\n 如果你沒有 pug 以及 stylus 的渲染器，可能报错\n```\nextends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug\n```\n```\n# 安装渲染器插件\nnpm install hexo-renderer-pug hexo-renderer-stylus --save\n```\n双击start_server.bat 重新启动服务器，可以看到主题效果生效了\nps：。\n\n![butterfly主题预览效果](/images/article01/70521.png)\n\n### 4.4 butterfly 主题配置\nbutterfly的配置文件在butterfly文件夹下的_config.yml，更多配置内容参考[butterfly官方教程](https://butterfly.js.org/)\nbutterfly升级主题可能会覆盖主题下的_config.yml配置文件，官方建议将butterfly主题下的配置文件重名并复制到项目根目录，在项目根目录进行配置\n\n以下是一些比较常用的配置\n#### 4.4.1 配置导航栏\nbutterfly 提供了默认的导航栏tab，只需要将menu字段下的tab去掉前面的#注释即可，形式是\"名称：链接地址 || 图标([Font Awesome](https://fontawesome.com/)\n```\nmenu:\n   首页: / || fas fa-home\n   归档: /archives/ || fas fa-archive\n   标签: /tags/ || fas fa-tags\n   分类: /categories/ || fas fa-folder-open\n  # List||fas fa-list:\n  #   Music: /music/ || fas fa-music\n  #   Movie: /movies/ || fas fa-video\n  # Link: /link/ || fas fa-link\n   关于: /about/ || fas fa-heart\n```\n#### 4.4.2 添加子页面\n刷新页面，发现导航栏已经展示出来了，但是点击其中tab，发现报错了，这是因为还没添加页面\n```\nCannot GET /about/\n```\n##### 关于页\n在项目根目录使用cmd命令\n```\nhexo new page about\n```\n使用该命令后会生成/source/about/index.md文件，打开并添加layout: about属性以及更多正文信息\n```\n---\ntitle: about\ndate: 2020-02-23 19:20:33\nlayout: about\n---\n\n这里写关于页的正文我是xxx，支持 Markdown, HTML\n\n```\n##### 分类页\n其他子页面同理，分类页创建：\n```\nhexo new page categories\n```\n同样在source/categories/index.md 这个文件添加属性type: \"categories\"\n\n##### 标签页\n```\nhexo new page tags\n```\n在 source/tags/index.md 中添加标签属性type: \"tags\"\n##### 使用标签\n在文章的开头的Front-matter区域，添加以下字段即可新增分类或者标签：\n```\ncategories: 技术\ntags:\n  - Hexo\n```\n#### 4.4.3 头像\n```\navatar:\n  img: /img/avatar.png # 头像图片\n  effect: true # 头像动效\n```\n#### 4.4.4 顶部图\n* 如果不需要显示顶部图，可直接配置 disable_top_img: true\n* 显示优先级：文章的front-matter的top_img属性 >ront-matter的 cover属性 > 配置文件的 default_top_img属性\n* 主页顶部图高度：index_top_img_height:  # 例如 300px/300em/300rem  \n\n\n#### 4.4.5 评论功能\n一般的主题都支持多个评论插件，如disqus、gitalk、valine、 waline、twikoo等\n以Valine为例，Valine需要LeanCloud支持，\n1. 登录或注册 LeanCloud，如果是国际版不需要实名认证， 进入控制台后点击左下角创建应用\n2. 应用创建好以后，进入刚刚创建的应用，选择左下角的设置>应用Key，复制APP ID和APP Key\n3. 在主题配置文件的comments字段下的user设置为Valine,valine填写AppID 和 AppKey\n```\ncomments:\n  # Up to two comments system, the first will be shown as default\n  use: Valine\n  ...\n  valine:\n  appId: # your appId\n  appKey: # your appKey\n```\n\n#### 4.4.6 访问人数和阅读统计\nbutterfly的默认调用busuanzi的进行统计，设置以下字段，刷新页面后在侧边栏的网站资讯看到本站访客数和本站总访问量。文章标题后面带有阅读量次数\n```\nbusuanzi:\n  site_uv: true\n  site_pv: true\n  page_pv: true\n```\n#### 4.4.7 字数统计\n安装插件\n```\n# wordcount字数统计插件\nnpm install hexo-wordcount --save\n```\n配置以下字段\n```\nwordcount:\n  enable: true\n  post_wordcount: true\n  min2read: true\n  total_wordcount: true\n```\n\n#### 4.4.8 分析统计\n* 以百度统计为例\n* 登录百度统计官网管理后台，使用设置->账户设置->网站列表->新增网站\n* 复制应用的统计代码中的key到配置中的baidu_analytics字段\n```\n# 填写百度统计代码的key（形如“  hm.src = \"https://hm.baidu.com/hm.js?28e4ea7748d7403e4bf35f897a5e67e0\";）\nbaidu_analytics: \n\n```\n#### 4.4.9 中文字和半形的英文、数字、符号之间插入空白\n```\n# https://github.com/vinta/pangu.js\n# Insert a space between Chinese character and English character (中英文之間添加空格)\npangu:\n  enable: false\n  field: post # site/post\n```\n\n#### 4.4.10 图片压缩\nButterfly主题需要使用到很多图片。如果图片太大，会严重拖慢网站的加载速度，以下是常用压缩工具\n* [tinypng](https://tinypng.com/)\n* caesium\n\n## 总结\n一通操作下来，相信你的博客样式已经变得称心如意了，但是优化还远不止如此，如果觉得username.github.io格调不够高可以绑定自己的域名；如果想在搜索引擎更容易搜索到自己的博客需要做SEO优化；如果图片越来越多需要优化加载速度就需要使用图床来管理图片。\n以上~\n\n## 参考资料\n[1]. Hexo : https://hexo.io/zh-cn/docs/\n[2]. Butterfly : https://butterfly.js.org/\n[3]. Valine : https://valine.js.org/quickstart.html","slug":"GitHub Pages + Hexo 搭建个人博客网站","published":1,"date":"2023-12-17T13:21:30.992Z","updated":"2023-12-19T09:19:58.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqc6duq70009tgka052v4928","content":"<h1 id=\"GitHub-Pages-Hexo搭建个人博客网站\"><a href=\"#GitHub-Pages-Hexo搭建个人博客网站\" class=\"headerlink\" title=\"GitHub Pages + Hexo搭建个人博客网站\"></a>GitHub Pages + Hexo搭建个人博客网站</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>&emsp;&emsp;Hexo 是一个基于 Node.js 构建的静态博客框架。它能够根据 Markdown 文件生成静态的 HTML 网页，方便快速搭建静态网站。<br>GitHub Pages 是 GitHub 提供的一项上免费托管和发布静态网站的服务，有了它可以省去自己购买和维护服务器的成本。<br>如果你想搭建一个个人网站或者博客，GitHub Pages + Hexo是一个不错且主流的方案。你只需要掌握一点markdown语法和git使用配合教程就可以快速上手，同时这也是本站的搭建过程~</p>\n<h4 id=\"本文环境\"><a href=\"#本文环境\" class=\"headerlink\" title=\"本文环境\"></a>本文环境</h4><ul>\n<li>Win 10</li>\n<li>NodeJS v21.4.0</li>\n<li>git</li>\n</ul>\n<h2 id=\"1-安装软件\"><a href=\"#1-安装软件\" class=\"headerlink\" title=\"1 安装软件\"></a>1 安装软件</h2><h3 id=\"1-1-安装NodeJS\"><a href=\"#1-1-安装NodeJS\" class=\"headerlink\" title=\"1.1 安装NodeJS\"></a>1.1 安装NodeJS</h3><ul>\n<li>在<a href=\"https://nodejs.org/zh-cn/download/\">NodeJS官网</a>下载安装包并安装</li>\n<li>配置环境变量，如果选择的是msi格式的安装包会自动添加环境变量</li>\n</ul>\n<h3 id=\"1-2-安装-Hexo\"><a href=\"#1-2-安装-Hexo\" class=\"headerlink\" title=\"1.2 安装 Hexo\"></a>1.2 安装 Hexo</h3><p>新建一个文件夹作为你网站的根目录，在当前目录打开命令提示符（在地址栏输入”cmd”），使用以下命令安装Hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用 npm 安装 Hexo</span><br><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看版本</span><br><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-创建一个hexo项目并初始化\"><a href=\"#1-3-创建一个hexo项目并初始化\" class=\"headerlink\" title=\"1.3 创建一个hexo项目并初始化\"></a>1.3 创建一个hexo项目并初始化</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 初始化一个名为&quot;hexo-blog&quot;的 Hexo 项目</span><br><span class=\"line\">hexo init hexo-blog</span><br><span class=\"line\"></span><br><span class=\"line\">cd hexo-blog</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装 Hexo 项目所需的依赖包</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Hexo 初始化完成后，会生成一个包含基本文件和目录的项目结构</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo-blog/         # 项目根目录</span><br><span class=\"line\">|-- _config.yml    # 主配置文件</span><br><span class=\"line\">|-- node_modules/  # Node.js 模块目录，通过 npm install 安装</span><br><span class=\"line\">|-- public/        # 自动生成的静态文件，部署时上传到服务器</span><br><span class=\"line\">|-- scaffolds/     # 模版文件</span><br><span class=\"line\">|-- source/        # 存放源文件的目录，包括文章、图片等</span><br><span class=\"line\">|   |-- _drafts/   # 草稿目录，未发布的文章</span><br><span class=\"line\">|   |-- _posts/    # 存放正式发布的文章</span><br><span class=\"line\">|-- themes/        # 存放主题的目录</span><br><span class=\"line\">|-- .gitignore     # Git 版本控制的忽略文件列表</span><br><span class=\"line\">|-- package.json   # 项目的 Node.js 包配置文件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Hexo配置\"><a href=\"#2-Hexo配置\" class=\"headerlink\" title=\"2 Hexo配置\"></a>2 Hexo配置</h2><p>hexo-blog&#x2F;_config.yml是heox的主配置文件，用来定义博客的各种设置和选项，包括站点设置、目录设置、部署设置等等，下面是一些重要的配置选项：<br>ps：yaml是一个方便人类阅读的数据序列化格式，通常用来做配置文件，主要用缩进来表示层次结构，另外注意”key: value”的value前面有一个空格</p>\n<h3 id=\"2-1-网站Site信息\"><a href=\"#2-1-网站Site信息\" class=\"headerlink\" title=\"2.1 网站Site信息\"></a>2.1 网站Site信息</h3><ul>\n<li>打开_config.yml主配置文件，找到site字段，修改网站基本信息<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: # 网站标题</span><br><span class=\"line\">subtitle: </span><br><span class=\"line\">description: # 网站副标题</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">author: # 网站作者</span><br><span class=\"line\">language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改</span><br><span class=\"line\">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-2-开启文章资源文件夹（可选-推荐）\"><a href=\"#2-2-开启文章资源文件夹（可选-推荐）\" class=\"headerlink\" title=\"2.2 开启文章资源文件夹（可选&#x2F;推荐）\"></a>2.2 开启文章资源文件夹（可选&#x2F;推荐）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 通过 hexo new [layout] &lt;title&gt; 命令创建新文章时自动创建同名文件夹</span><br><span class=\"line\">post_asset_folder: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-配置永久链接（可选-推荐）\"><a href=\"#2-3-配置永久链接（可选-推荐）\" class=\"headerlink\" title=\"2.3 配置永久链接（可选&#x2F;推荐）\"></a>2.3 配置永久链接（可选&#x2F;推荐）</h3><p>Hexo 默认的链接格式是permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;，配置永久链接有助于优化网站的 SEO：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装插件</span><br><span class=\"line\">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>\n<p>修改主配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">permalink: :abbrlink/ #文章的永久链接 </span><br><span class=\"line\">abbrlink:</span><br><span class=\"line\">  alg: crc32  #算法: crc16(default) and crc32</span><br><span class=\"line\">  rep: hex    #进制: dec(default) and hex</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>更多配置字段参考<a href=\"https://hexo.io/zh-cn/docs/configuration\">Hexo配置</a></li>\n</ul>\n<h3 id=\"2-4-预览效果\"><a href=\"#2-4-预览效果\" class=\"headerlink\" title=\"2.4 预览效果\"></a>2.4 预览效果</h3><p>打开命令提示符，输入以下命令启动hexo本地服务器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<ul>\n<li>浏览器访问 <a href=\"http://localhost:4000，即可看到默认的主题风格，同时可以看到hexo默认生成了一篇名为“Hello\">http://localhost:4000，即可看到默认的主题风格，同时可以看到hexo默认生成了一篇名为“Hello</a> World”的文章。</li>\n</ul>\n<p><img src=\"/images/article01/70321.png\" alt=\"默认主题的预览效果\"></p>\n<h3 id=\"3-Hexo-使用\"><a href=\"#3-Hexo-使用\" class=\"headerlink\" title=\"3 Hexo 使用\"></a>3 Hexo 使用</h3><h3 id=\"3-1-写作\"><a href=\"#3-1-写作\" class=\"headerlink\" title=\"3.1 写作\"></a>3.1 写作</h3><h4 id=\"3-1-1-编辑文章\"><a href=\"#3-1-1-编辑文章\" class=\"headerlink\" title=\"3.1.1 编辑文章\"></a>3.1.1 编辑文章</h4><p>source&#x2F;_posts 目录是用于存放博客文章的地方，每篇博客文章对应一个 Markdown 文件。可以通过在创建和编辑文章也可以使用命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开使用命令创建好的文章，在文件最上方有一块以 — 分隔的区域，称为<a href=\"https://hexo.io/zh-cn/docs/front-matter\">Front-matter </a>，作用是配置文章标题、日期、分类、标签等属性。</li>\n</ul>\n<h4 id=\"3-1-2-草稿箱\"><a href=\"#3-1-2-草稿箱\" class=\"headerlink\" title=\"3.1.2 草稿箱\"></a>3.1.2 草稿箱</h4><p>在编辑过程中如果需要将文件作为草稿而不是直接发布，可以使用drafts。source&#x2F;_drafts 文件夹用于存放草稿，等到完成并决定发布时再将其移动到 source&#x2F;_posts 文件夹或者使用命令进行发布</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建一个新的草稿</span><br><span class=\"line\">hexo new draft &lt;title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"># 将草稿发布为正式文章</span><br><span class=\"line\">hexo publish draft &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-1-3-文章中插入图片\"><a href=\"#3-1-3-文章中插入图片\" class=\"headerlink\" title=\"3.1.3 文章中插入图片\"></a>3.1.3 文章中插入图片</h4><ul>\n<li><p>方式1：使用markdown标签</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 外链</span><br><span class=\"line\">![图片描述](url)</span><br><span class=\"line\"></span><br><span class=\"line\"># 相对于博客的根目录：source/imgs/a.jpg</span><br><span class=\"line\">![图片描述](/imgs/a.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\"># Hexo 配置文件 _config.yaml 将 post_asset_folder 选项设为 true,hexo new xxx 新建文章时，Hexo 便会在 source/_posts 目录下新建与文章同名的文件夹</span><br><span class=\"line\"># 相对于某篇文章的目，例如./article_1/a.jpg的目录</span><br><span class=\"line\">![图片描述](a.jpg)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式2：使用 Hexo asset_img 标签</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure>\n<p>缺点：无法在 Markdown 编辑器中正常显示图片<br>改进：插件hexo-renderer-marked解决了这个问题<br>可以只用npm install hexo-renderer-marked命令直接安装，之后在config.yaml中更改配置如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_asset_folder: true</span><br><span class=\"line\">marked:</span><br><span class=\"line\">  prependRoot: true</span><br><span class=\"line\">  postAsset: true</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-2-启动预览服务器\"><a href=\"#3-2-启动预览服务器\" class=\"headerlink\" title=\"3.2 启动预览服务器\"></a>3.2 启动预览服务器</h3><p>博客文章表写好就可以进行发布了，hexo提供了本地预览服务器，上一步预览效果的时候已经启动过服务器，以下是相关的命令解释：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 清除缓存文件，在某些情况（尤其是更换主题后），如果对站点的更改无论如何也不生效可能用到</span><br><span class=\"line\"># hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"># 将md和配置等源文件生成网页静态文件，存储到public目录，简写成hexo g</span><br><span class=\"line\">hexo generate </span><br><span class=\"line\"></span><br><span class=\"line\"># 启动服务器 默认访问地址： http://localhost:4000/</span><br><span class=\"line\">hexo server</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以将指令编写到批处理文件，省去每次输入命令:<br>在项目根目录创建start_server.bat文件，添加以下内容并保存，之后通过双击运行来启动服务器。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">echo Stopping Hexo server...</span><br><span class=\"line\">taskkill /IM &quot;node.exe&quot; /F</span><br><span class=\"line\">echo Hexo server stopped.</span><br><span class=\"line\"></span><br><span class=\"line\">echo Starting Hexo server...</span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo server </span><br><span class=\"line\">echo Hexo server started.</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-3-部署到服务器\"><a href=\"#3-3-部署到服务器\" class=\"headerlink\" title=\"3.3 部署到服务器\"></a>3.3 部署到服务器</h3><p>以上只是本地预览，想要别人访问得到这个博客，还需要部署到服务器上自己的服务器上或者GitHub Pages等托管服务。<br>以下以发布到Github Pages为例：</p>\n<ol>\n<li>创建github仓库<br>填写仓库名，名称为”username.github.io”，username是你的Github用户名，仓库属性为public</li>\n</ol>\n<p>如果你的 GitHub 仓库命名为 username.github.io，GitHub Pages 将会默认将站点托管在 username.github.io 这个域名下，否则会托管在username.github.io&#x2F;仓库名 这个路径下</p>\n<ol start=\"2\">\n<li>Hexo 提供了一键部署功能，首先使用以下命令安装插件<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装插件用于将生成的静态网站文件（通常位于 public 目录）部署到 GitHub</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>\n<li>修改网站配置文件<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: git@github.com:xxxx/xxxx.github.io.git # 仓库地址</span><br><span class=\"line\">  branch: main  # 分支</span><br></pre></td></tr></table></figure></li>\n<li>运行部署命令<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一键部署</span><br><span class=\"line\">hexo deploy </span><br><span class=\"line\"></span><br><span class=\"line\"># 生成静态文件并部署</span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n浏览器访问 <a href=\"https://username.github.io/%EF%BC%8C%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F%EF%BC%8C%E8%BF%99%E5%B0%B1%E6%98%AF%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BA%86%EF%BC%8CCongratulations%EF%BC%81\">https://username.github.io/，部署成功，这就是你的个人博客了，Congratulations！</a></li>\n</ol>\n<h2 id=\"4-更换主题\"><a href=\"#4-更换主题\" class=\"headerlink\" title=\"4 更换主题\"></a>4 更换主题</h2><p>以上我们通过Hexo和Github搭建了一个简单的博客，但是这个博客页面样式还很简陋，很多功能如访问统计、评论功能也没有，下面就开始我们博客的美（折）化（腾）之旅。</p>\n<p>Hexo提供了非常多的主题供选择，可以在github 搜索”hexo theme”可以根据star看到比较受欢迎的主题。</p>\n<p>下面以butterfly为例子</p>\n<h3 id=\"4-1-下载butterfly\"><a href=\"#4-1-下载butterfly\" class=\"headerlink\" title=\"4.1 下载butterfly\"></a>4.1 下载butterfly</h3><p>通过git clone 或者直接下载zip包并复制到项目theme目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-应用主题\"><a href=\"#4-2-应用主题\" class=\"headerlink\" title=\"4.2 应用主题\"></a>4.2 应用主题</h3><ul>\n<li>修改 Hexo 根目录下的 _config.yml，把主題改为 butterfly<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: butterfly</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-3-安装渲染器插件\"><a href=\"#4-3-安装渲染器插件\" class=\"headerlink\" title=\"4.3 安装渲染器插件\"></a>4.3 安装渲染器插件</h3><p> 如果你沒有 pug 以及 stylus 的渲染器，可能报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装渲染器插件</span><br><span class=\"line\">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>\n<p>双击start_server.bat 重新启动服务器，可以看到主题效果生效了<br>ps：。</p>\n<p><img src=\"/images/article01/70521.png\" alt=\"butterfly主题预览效果\"></p>\n<h3 id=\"4-4-butterfly-主题配置\"><a href=\"#4-4-butterfly-主题配置\" class=\"headerlink\" title=\"4.4 butterfly 主题配置\"></a>4.4 butterfly 主题配置</h3><p>butterfly的配置文件在butterfly文件夹下的_config.yml，更多配置内容参考<a href=\"https://butterfly.js.org/\">butterfly官方教程</a><br>butterfly升级主题可能会覆盖主题下的_config.yml配置文件，官方建议将butterfly主题下的配置文件重名并复制到项目根目录，在项目根目录进行配置</p>\n<p>以下是一些比较常用的配置</p>\n<h4 id=\"4-4-1-配置导航栏\"><a href=\"#4-4-1-配置导航栏\" class=\"headerlink\" title=\"4.4.1 配置导航栏\"></a>4.4.1 配置导航栏</h4><p>butterfly 提供了默认的导航栏tab，只需要将menu字段下的tab去掉前面的#注释即可，形式是”名称：链接地址 || 图标(<a href=\"https://fontawesome.com/\">Font Awesome</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">   首页: / || fas fa-home</span><br><span class=\"line\">   归档: /archives/ || fas fa-archive</span><br><span class=\"line\">   标签: /tags/ || fas fa-tags</span><br><span class=\"line\">   分类: /categories/ || fas fa-folder-open</span><br><span class=\"line\">  # List||fas fa-list:</span><br><span class=\"line\">  #   Music: /music/ || fas fa-music</span><br><span class=\"line\">  #   Movie: /movies/ || fas fa-video</span><br><span class=\"line\">  # Link: /link/ || fas fa-link</span><br><span class=\"line\">   关于: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-2-添加子页面\"><a href=\"#4-4-2-添加子页面\" class=\"headerlink\" title=\"4.4.2 添加子页面\"></a>4.4.2 添加子页面</h4><p>刷新页面，发现导航栏已经展示出来了，但是点击其中tab，发现报错了，这是因为还没添加页面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cannot GET /about/</span><br></pre></td></tr></table></figure>\n<h5 id=\"关于页\"><a href=\"#关于页\" class=\"headerlink\" title=\"关于页\"></a>关于页</h5><p>在项目根目录使用cmd命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n<p>使用该命令后会生成&#x2F;source&#x2F;about&#x2F;index.md文件，打开并添加layout: about属性以及更多正文信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: about</span><br><span class=\"line\">date: 2020-02-23 19:20:33</span><br><span class=\"line\">layout: about</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">这里写关于页的正文我是xxx，支持 Markdown, HTML</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h5 id=\"分类页\"><a href=\"#分类页\" class=\"headerlink\" title=\"分类页\"></a>分类页</h5><p>其他子页面同理，分类页创建：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>同样在source&#x2F;categories&#x2F;index.md 这个文件添加属性type: “categories”</p>\n<h5 id=\"标签页\"><a href=\"#标签页\" class=\"headerlink\" title=\"标签页\"></a>标签页</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p>在 source&#x2F;tags&#x2F;index.md 中添加标签属性type: “tags”</p>\n<h5 id=\"使用标签\"><a href=\"#使用标签\" class=\"headerlink\" title=\"使用标签\"></a>使用标签</h5><p>在文章的开头的Front-matter区域，添加以下字段即可新增分类或者标签：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories: 技术</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - Hexo</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-3-头像\"><a href=\"#4-4-3-头像\" class=\"headerlink\" title=\"4.4.3 头像\"></a>4.4.3 头像</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">  img: /img/avatar.png # 头像图片</span><br><span class=\"line\">  effect: true # 头像动效</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-4-顶部图\"><a href=\"#4-4-4-顶部图\" class=\"headerlink\" title=\"4.4.4 顶部图\"></a>4.4.4 顶部图</h4><ul>\n<li>如果不需要显示顶部图，可直接配置 disable_top_img: true</li>\n<li>显示优先级：文章的front-matter的top_img属性 &gt;ront-matter的 cover属性 &gt; 配置文件的 default_top_img属性</li>\n<li>主页顶部图高度：index_top_img_height:  # 例如 300px&#x2F;300em&#x2F;300rem</li>\n</ul>\n<h4 id=\"4-4-5-评论功能\"><a href=\"#4-4-5-评论功能\" class=\"headerlink\" title=\"4.4.5 评论功能\"></a>4.4.5 评论功能</h4><p>一般的主题都支持多个评论插件，如disqus、gitalk、valine、 waline、twikoo等<br>以Valine为例，Valine需要LeanCloud支持，</p>\n<ol>\n<li>登录或注册 LeanCloud，如果是国际版不需要实名认证， 进入控制台后点击左下角创建应用</li>\n<li>应用创建好以后，进入刚刚创建的应用，选择左下角的设置&gt;应用Key，复制APP ID和APP Key</li>\n<li>在主题配置文件的comments字段下的user设置为Valine,valine填写AppID 和 AppKey<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comments:</span><br><span class=\"line\">  # Up to two comments system, the first will be shown as default</span><br><span class=\"line\">  use: Valine</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  valine:</span><br><span class=\"line\">  appId: # your appId</span><br><span class=\"line\">  appKey: # your appKey</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"4-4-6-访问人数和阅读统计\"><a href=\"#4-4-6-访问人数和阅读统计\" class=\"headerlink\" title=\"4.4.6 访问人数和阅读统计\"></a>4.4.6 访问人数和阅读统计</h4><p>butterfly的默认调用busuanzi的进行统计，设置以下字段，刷新页面后在侧边栏的网站资讯看到本站访客数和本站总访问量。文章标题后面带有阅读量次数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi:</span><br><span class=\"line\">  site_uv: true</span><br><span class=\"line\">  site_pv: true</span><br><span class=\"line\">  page_pv: true</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-7-字数统计\"><a href=\"#4-4-7-字数统计\" class=\"headerlink\" title=\"4.4.7 字数统计\"></a>4.4.7 字数统计</h4><p>安装插件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wordcount字数统计插件</span><br><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<p>配置以下字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wordcount:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  post_wordcount: true</span><br><span class=\"line\">  min2read: true</span><br><span class=\"line\">  total_wordcount: true</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-8-分析统计\"><a href=\"#4-4-8-分析统计\" class=\"headerlink\" title=\"4.4.8 分析统计\"></a>4.4.8 分析统计</h4><ul>\n<li>以百度统计为例</li>\n<li>登录百度统计官网管理后台，使用设置-&gt;账户设置-&gt;网站列表-&gt;新增网站</li>\n<li>复制应用的统计代码中的key到配置中的baidu_analytics字段<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 填写百度统计代码的key（形如“  hm.src = &quot;https://hm.baidu.com/hm.js?28e4ea7748d7403e4bf35f897a5e67e0&quot;;）</span><br><span class=\"line\">baidu_analytics: </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"4-4-9-中文字和半形的英文、数字、符号之间插入空白\"><a href=\"#4-4-9-中文字和半形的英文、数字、符号之间插入空白\" class=\"headerlink\" title=\"4.4.9 中文字和半形的英文、数字、符号之间插入空白\"></a>4.4.9 中文字和半形的英文、数字、符号之间插入空白</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># https://github.com/vinta/pangu.js</span><br><span class=\"line\"># Insert a space between Chinese character and English character (中英文之間添加空格)</span><br><span class=\"line\">pangu:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  field: post # site/post</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-10-图片压缩\"><a href=\"#4-4-10-图片压缩\" class=\"headerlink\" title=\"4.4.10 图片压缩\"></a>4.4.10 图片压缩</h4><p>Butterfly主题需要使用到很多图片。如果图片太大，会严重拖慢网站的加载速度，以下是常用压缩工具</p>\n<ul>\n<li><a href=\"https://tinypng.com/\">tinypng</a></li>\n<li>caesium</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>一通操作下来，相信你的博客样式已经变得称心如意了，但是优化还远不止如此，如果觉得username.github.io格调不够高可以绑定自己的域名；如果想在搜索引擎更容易搜索到自己的博客需要做SEO优化；如果图片越来越多需要优化加载速度就需要使用图床来管理图片。<br>以上~</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>[1]. Hexo : <a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a><br>[2]. Butterfly : <a href=\"https://butterfly.js.org/\">https://butterfly.js.org/</a><br>[3]. Valine : <a href=\"https://valine.js.org/quickstart.html\">https://valine.js.org/quickstart.html</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"GitHub-Pages-Hexo搭建个人博客网站\"><a href=\"#GitHub-Pages-Hexo搭建个人博客网站\" class=\"headerlink\" title=\"GitHub Pages + Hexo搭建个人博客网站\"></a>GitHub Pages + Hexo搭建个人博客网站</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>&emsp;&emsp;Hexo 是一个基于 Node.js 构建的静态博客框架。它能够根据 Markdown 文件生成静态的 HTML 网页，方便快速搭建静态网站。<br>GitHub Pages 是 GitHub 提供的一项上免费托管和发布静态网站的服务，有了它可以省去自己购买和维护服务器的成本。<br>如果你想搭建一个个人网站或者博客，GitHub Pages + Hexo是一个不错且主流的方案。你只需要掌握一点markdown语法和git使用配合教程就可以快速上手，同时这也是本站的搭建过程~</p>\n<h4 id=\"本文环境\"><a href=\"#本文环境\" class=\"headerlink\" title=\"本文环境\"></a>本文环境</h4><ul>\n<li>Win 10</li>\n<li>NodeJS v21.4.0</li>\n<li>git</li>\n</ul>\n<h2 id=\"1-安装软件\"><a href=\"#1-安装软件\" class=\"headerlink\" title=\"1 安装软件\"></a>1 安装软件</h2><h3 id=\"1-1-安装NodeJS\"><a href=\"#1-1-安装NodeJS\" class=\"headerlink\" title=\"1.1 安装NodeJS\"></a>1.1 安装NodeJS</h3><ul>\n<li>在<a href=\"https://nodejs.org/zh-cn/download/\">NodeJS官网</a>下载安装包并安装</li>\n<li>配置环境变量，如果选择的是msi格式的安装包会自动添加环境变量</li>\n</ul>\n<h3 id=\"1-2-安装-Hexo\"><a href=\"#1-2-安装-Hexo\" class=\"headerlink\" title=\"1.2 安装 Hexo\"></a>1.2 安装 Hexo</h3><p>新建一个文件夹作为你网站的根目录，在当前目录打开命令提示符（在地址栏输入”cmd”），使用以下命令安装Hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用 npm 安装 Hexo</span><br><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看版本</span><br><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-创建一个hexo项目并初始化\"><a href=\"#1-3-创建一个hexo项目并初始化\" class=\"headerlink\" title=\"1.3 创建一个hexo项目并初始化\"></a>1.3 创建一个hexo项目并初始化</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 初始化一个名为&quot;hexo-blog&quot;的 Hexo 项目</span><br><span class=\"line\">hexo init hexo-blog</span><br><span class=\"line\"></span><br><span class=\"line\">cd hexo-blog</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装 Hexo 项目所需的依赖包</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Hexo 初始化完成后，会生成一个包含基本文件和目录的项目结构</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo-blog/         # 项目根目录</span><br><span class=\"line\">|-- _config.yml    # 主配置文件</span><br><span class=\"line\">|-- node_modules/  # Node.js 模块目录，通过 npm install 安装</span><br><span class=\"line\">|-- public/        # 自动生成的静态文件，部署时上传到服务器</span><br><span class=\"line\">|-- scaffolds/     # 模版文件</span><br><span class=\"line\">|-- source/        # 存放源文件的目录，包括文章、图片等</span><br><span class=\"line\">|   |-- _drafts/   # 草稿目录，未发布的文章</span><br><span class=\"line\">|   |-- _posts/    # 存放正式发布的文章</span><br><span class=\"line\">|-- themes/        # 存放主题的目录</span><br><span class=\"line\">|-- .gitignore     # Git 版本控制的忽略文件列表</span><br><span class=\"line\">|-- package.json   # 项目的 Node.js 包配置文件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Hexo配置\"><a href=\"#2-Hexo配置\" class=\"headerlink\" title=\"2 Hexo配置\"></a>2 Hexo配置</h2><p>hexo-blog&#x2F;_config.yml是heox的主配置文件，用来定义博客的各种设置和选项，包括站点设置、目录设置、部署设置等等，下面是一些重要的配置选项：<br>ps：yaml是一个方便人类阅读的数据序列化格式，通常用来做配置文件，主要用缩进来表示层次结构，另外注意”key: value”的value前面有一个空格</p>\n<h3 id=\"2-1-网站Site信息\"><a href=\"#2-1-网站Site信息\" class=\"headerlink\" title=\"2.1 网站Site信息\"></a>2.1 网站Site信息</h3><ul>\n<li>打开_config.yml主配置文件，找到site字段，修改网站基本信息<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: # 网站标题</span><br><span class=\"line\">subtitle: </span><br><span class=\"line\">description: # 网站副标题</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">author: # 网站作者</span><br><span class=\"line\">language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改</span><br><span class=\"line\">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-2-开启文章资源文件夹（可选-推荐）\"><a href=\"#2-2-开启文章资源文件夹（可选-推荐）\" class=\"headerlink\" title=\"2.2 开启文章资源文件夹（可选&#x2F;推荐）\"></a>2.2 开启文章资源文件夹（可选&#x2F;推荐）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 通过 hexo new [layout] &lt;title&gt; 命令创建新文章时自动创建同名文件夹</span><br><span class=\"line\">post_asset_folder: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-配置永久链接（可选-推荐）\"><a href=\"#2-3-配置永久链接（可选-推荐）\" class=\"headerlink\" title=\"2.3 配置永久链接（可选&#x2F;推荐）\"></a>2.3 配置永久链接（可选&#x2F;推荐）</h3><p>Hexo 默认的链接格式是permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;，配置永久链接有助于优化网站的 SEO：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装插件</span><br><span class=\"line\">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>\n<p>修改主配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">permalink: :abbrlink/ #文章的永久链接 </span><br><span class=\"line\">abbrlink:</span><br><span class=\"line\">  alg: crc32  #算法: crc16(default) and crc32</span><br><span class=\"line\">  rep: hex    #进制: dec(default) and hex</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>更多配置字段参考<a href=\"https://hexo.io/zh-cn/docs/configuration\">Hexo配置</a></li>\n</ul>\n<h3 id=\"2-4-预览效果\"><a href=\"#2-4-预览效果\" class=\"headerlink\" title=\"2.4 预览效果\"></a>2.4 预览效果</h3><p>打开命令提示符，输入以下命令启动hexo本地服务器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<ul>\n<li>浏览器访问 <a href=\"http://localhost:4000，即可看到默认的主题风格，同时可以看到hexo默认生成了一篇名为“Hello\">http://localhost:4000，即可看到默认的主题风格，同时可以看到hexo默认生成了一篇名为“Hello</a> World”的文章。</li>\n</ul>\n<p><img src=\"/images/article01/70321.png\" alt=\"默认主题的预览效果\"></p>\n<h3 id=\"3-Hexo-使用\"><a href=\"#3-Hexo-使用\" class=\"headerlink\" title=\"3 Hexo 使用\"></a>3 Hexo 使用</h3><h3 id=\"3-1-写作\"><a href=\"#3-1-写作\" class=\"headerlink\" title=\"3.1 写作\"></a>3.1 写作</h3><h4 id=\"3-1-1-编辑文章\"><a href=\"#3-1-1-编辑文章\" class=\"headerlink\" title=\"3.1.1 编辑文章\"></a>3.1.1 编辑文章</h4><p>source&#x2F;_posts 目录是用于存放博客文章的地方，每篇博客文章对应一个 Markdown 文件。可以通过在创建和编辑文章也可以使用命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开使用命令创建好的文章，在文件最上方有一块以 — 分隔的区域，称为<a href=\"https://hexo.io/zh-cn/docs/front-matter\">Front-matter </a>，作用是配置文章标题、日期、分类、标签等属性。</li>\n</ul>\n<h4 id=\"3-1-2-草稿箱\"><a href=\"#3-1-2-草稿箱\" class=\"headerlink\" title=\"3.1.2 草稿箱\"></a>3.1.2 草稿箱</h4><p>在编辑过程中如果需要将文件作为草稿而不是直接发布，可以使用drafts。source&#x2F;_drafts 文件夹用于存放草稿，等到完成并决定发布时再将其移动到 source&#x2F;_posts 文件夹或者使用命令进行发布</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建一个新的草稿</span><br><span class=\"line\">hexo new draft &lt;title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"># 将草稿发布为正式文章</span><br><span class=\"line\">hexo publish draft &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-1-3-文章中插入图片\"><a href=\"#3-1-3-文章中插入图片\" class=\"headerlink\" title=\"3.1.3 文章中插入图片\"></a>3.1.3 文章中插入图片</h4><ul>\n<li><p>方式1：使用markdown标签</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 外链</span><br><span class=\"line\">![图片描述](url)</span><br><span class=\"line\"></span><br><span class=\"line\"># 相对于博客的根目录：source/imgs/a.jpg</span><br><span class=\"line\">![图片描述](/imgs/a.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\"># Hexo 配置文件 _config.yaml 将 post_asset_folder 选项设为 true,hexo new xxx 新建文章时，Hexo 便会在 source/_posts 目录下新建与文章同名的文件夹</span><br><span class=\"line\"># 相对于某篇文章的目，例如./article_1/a.jpg的目录</span><br><span class=\"line\">![图片描述](a.jpg)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式2：使用 Hexo asset_img 标签</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure>\n<p>缺点：无法在 Markdown 编辑器中正常显示图片<br>改进：插件hexo-renderer-marked解决了这个问题<br>可以只用npm install hexo-renderer-marked命令直接安装，之后在config.yaml中更改配置如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_asset_folder: true</span><br><span class=\"line\">marked:</span><br><span class=\"line\">  prependRoot: true</span><br><span class=\"line\">  postAsset: true</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-2-启动预览服务器\"><a href=\"#3-2-启动预览服务器\" class=\"headerlink\" title=\"3.2 启动预览服务器\"></a>3.2 启动预览服务器</h3><p>博客文章表写好就可以进行发布了，hexo提供了本地预览服务器，上一步预览效果的时候已经启动过服务器，以下是相关的命令解释：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 清除缓存文件，在某些情况（尤其是更换主题后），如果对站点的更改无论如何也不生效可能用到</span><br><span class=\"line\"># hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"># 将md和配置等源文件生成网页静态文件，存储到public目录，简写成hexo g</span><br><span class=\"line\">hexo generate </span><br><span class=\"line\"></span><br><span class=\"line\"># 启动服务器 默认访问地址： http://localhost:4000/</span><br><span class=\"line\">hexo server</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以将指令编写到批处理文件，省去每次输入命令:<br>在项目根目录创建start_server.bat文件，添加以下内容并保存，之后通过双击运行来启动服务器。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">echo Stopping Hexo server...</span><br><span class=\"line\">taskkill /IM &quot;node.exe&quot; /F</span><br><span class=\"line\">echo Hexo server stopped.</span><br><span class=\"line\"></span><br><span class=\"line\">echo Starting Hexo server...</span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo server </span><br><span class=\"line\">echo Hexo server started.</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-3-部署到服务器\"><a href=\"#3-3-部署到服务器\" class=\"headerlink\" title=\"3.3 部署到服务器\"></a>3.3 部署到服务器</h3><p>以上只是本地预览，想要别人访问得到这个博客，还需要部署到服务器上自己的服务器上或者GitHub Pages等托管服务。<br>以下以发布到Github Pages为例：</p>\n<ol>\n<li>创建github仓库<br>填写仓库名，名称为”username.github.io”，username是你的Github用户名，仓库属性为public</li>\n</ol>\n<p>如果你的 GitHub 仓库命名为 username.github.io，GitHub Pages 将会默认将站点托管在 username.github.io 这个域名下，否则会托管在username.github.io&#x2F;仓库名 这个路径下</p>\n<ol start=\"2\">\n<li>Hexo 提供了一键部署功能，首先使用以下命令安装插件<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装插件用于将生成的静态网站文件（通常位于 public 目录）部署到 GitHub</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>\n<li>修改网站配置文件<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: git@github.com:xxxx/xxxx.github.io.git # 仓库地址</span><br><span class=\"line\">  branch: main  # 分支</span><br></pre></td></tr></table></figure></li>\n<li>运行部署命令<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一键部署</span><br><span class=\"line\">hexo deploy </span><br><span class=\"line\"></span><br><span class=\"line\"># 生成静态文件并部署</span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n浏览器访问 <a href=\"https://username.github.io/%EF%BC%8C%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F%EF%BC%8C%E8%BF%99%E5%B0%B1%E6%98%AF%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BA%86%EF%BC%8CCongratulations%EF%BC%81\">https://username.github.io/，部署成功，这就是你的个人博客了，Congratulations！</a></li>\n</ol>\n<h2 id=\"4-更换主题\"><a href=\"#4-更换主题\" class=\"headerlink\" title=\"4 更换主题\"></a>4 更换主题</h2><p>以上我们通过Hexo和Github搭建了一个简单的博客，但是这个博客页面样式还很简陋，很多功能如访问统计、评论功能也没有，下面就开始我们博客的美（折）化（腾）之旅。</p>\n<p>Hexo提供了非常多的主题供选择，可以在github 搜索”hexo theme”可以根据star看到比较受欢迎的主题。</p>\n<p>下面以butterfly为例子</p>\n<h3 id=\"4-1-下载butterfly\"><a href=\"#4-1-下载butterfly\" class=\"headerlink\" title=\"4.1 下载butterfly\"></a>4.1 下载butterfly</h3><p>通过git clone 或者直接下载zip包并复制到项目theme目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-应用主题\"><a href=\"#4-2-应用主题\" class=\"headerlink\" title=\"4.2 应用主题\"></a>4.2 应用主题</h3><ul>\n<li>修改 Hexo 根目录下的 _config.yml，把主題改为 butterfly<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: butterfly</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-3-安装渲染器插件\"><a href=\"#4-3-安装渲染器插件\" class=\"headerlink\" title=\"4.3 安装渲染器插件\"></a>4.3 安装渲染器插件</h3><p> 如果你沒有 pug 以及 stylus 的渲染器，可能报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装渲染器插件</span><br><span class=\"line\">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>\n<p>双击start_server.bat 重新启动服务器，可以看到主题效果生效了<br>ps：。</p>\n<p><img src=\"/images/article01/70521.png\" alt=\"butterfly主题预览效果\"></p>\n<h3 id=\"4-4-butterfly-主题配置\"><a href=\"#4-4-butterfly-主题配置\" class=\"headerlink\" title=\"4.4 butterfly 主题配置\"></a>4.4 butterfly 主题配置</h3><p>butterfly的配置文件在butterfly文件夹下的_config.yml，更多配置内容参考<a href=\"https://butterfly.js.org/\">butterfly官方教程</a><br>butterfly升级主题可能会覆盖主题下的_config.yml配置文件，官方建议将butterfly主题下的配置文件重名并复制到项目根目录，在项目根目录进行配置</p>\n<p>以下是一些比较常用的配置</p>\n<h4 id=\"4-4-1-配置导航栏\"><a href=\"#4-4-1-配置导航栏\" class=\"headerlink\" title=\"4.4.1 配置导航栏\"></a>4.4.1 配置导航栏</h4><p>butterfly 提供了默认的导航栏tab，只需要将menu字段下的tab去掉前面的#注释即可，形式是”名称：链接地址 || 图标(<a href=\"https://fontawesome.com/\">Font Awesome</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">   首页: / || fas fa-home</span><br><span class=\"line\">   归档: /archives/ || fas fa-archive</span><br><span class=\"line\">   标签: /tags/ || fas fa-tags</span><br><span class=\"line\">   分类: /categories/ || fas fa-folder-open</span><br><span class=\"line\">  # List||fas fa-list:</span><br><span class=\"line\">  #   Music: /music/ || fas fa-music</span><br><span class=\"line\">  #   Movie: /movies/ || fas fa-video</span><br><span class=\"line\">  # Link: /link/ || fas fa-link</span><br><span class=\"line\">   关于: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-2-添加子页面\"><a href=\"#4-4-2-添加子页面\" class=\"headerlink\" title=\"4.4.2 添加子页面\"></a>4.4.2 添加子页面</h4><p>刷新页面，发现导航栏已经展示出来了，但是点击其中tab，发现报错了，这是因为还没添加页面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cannot GET /about/</span><br></pre></td></tr></table></figure>\n<h5 id=\"关于页\"><a href=\"#关于页\" class=\"headerlink\" title=\"关于页\"></a>关于页</h5><p>在项目根目录使用cmd命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n<p>使用该命令后会生成&#x2F;source&#x2F;about&#x2F;index.md文件，打开并添加layout: about属性以及更多正文信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: about</span><br><span class=\"line\">date: 2020-02-23 19:20:33</span><br><span class=\"line\">layout: about</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">这里写关于页的正文我是xxx，支持 Markdown, HTML</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h5 id=\"分类页\"><a href=\"#分类页\" class=\"headerlink\" title=\"分类页\"></a>分类页</h5><p>其他子页面同理，分类页创建：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>同样在source&#x2F;categories&#x2F;index.md 这个文件添加属性type: “categories”</p>\n<h5 id=\"标签页\"><a href=\"#标签页\" class=\"headerlink\" title=\"标签页\"></a>标签页</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p>在 source&#x2F;tags&#x2F;index.md 中添加标签属性type: “tags”</p>\n<h5 id=\"使用标签\"><a href=\"#使用标签\" class=\"headerlink\" title=\"使用标签\"></a>使用标签</h5><p>在文章的开头的Front-matter区域，添加以下字段即可新增分类或者标签：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories: 技术</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - Hexo</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-3-头像\"><a href=\"#4-4-3-头像\" class=\"headerlink\" title=\"4.4.3 头像\"></a>4.4.3 头像</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">  img: /img/avatar.png # 头像图片</span><br><span class=\"line\">  effect: true # 头像动效</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-4-顶部图\"><a href=\"#4-4-4-顶部图\" class=\"headerlink\" title=\"4.4.4 顶部图\"></a>4.4.4 顶部图</h4><ul>\n<li>如果不需要显示顶部图，可直接配置 disable_top_img: true</li>\n<li>显示优先级：文章的front-matter的top_img属性 &gt;ront-matter的 cover属性 &gt; 配置文件的 default_top_img属性</li>\n<li>主页顶部图高度：index_top_img_height:  # 例如 300px&#x2F;300em&#x2F;300rem</li>\n</ul>\n<h4 id=\"4-4-5-评论功能\"><a href=\"#4-4-5-评论功能\" class=\"headerlink\" title=\"4.4.5 评论功能\"></a>4.4.5 评论功能</h4><p>一般的主题都支持多个评论插件，如disqus、gitalk、valine、 waline、twikoo等<br>以Valine为例，Valine需要LeanCloud支持，</p>\n<ol>\n<li>登录或注册 LeanCloud，如果是国际版不需要实名认证， 进入控制台后点击左下角创建应用</li>\n<li>应用创建好以后，进入刚刚创建的应用，选择左下角的设置&gt;应用Key，复制APP ID和APP Key</li>\n<li>在主题配置文件的comments字段下的user设置为Valine,valine填写AppID 和 AppKey<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comments:</span><br><span class=\"line\">  # Up to two comments system, the first will be shown as default</span><br><span class=\"line\">  use: Valine</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  valine:</span><br><span class=\"line\">  appId: # your appId</span><br><span class=\"line\">  appKey: # your appKey</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"4-4-6-访问人数和阅读统计\"><a href=\"#4-4-6-访问人数和阅读统计\" class=\"headerlink\" title=\"4.4.6 访问人数和阅读统计\"></a>4.4.6 访问人数和阅读统计</h4><p>butterfly的默认调用busuanzi的进行统计，设置以下字段，刷新页面后在侧边栏的网站资讯看到本站访客数和本站总访问量。文章标题后面带有阅读量次数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi:</span><br><span class=\"line\">  site_uv: true</span><br><span class=\"line\">  site_pv: true</span><br><span class=\"line\">  page_pv: true</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-4-7-字数统计\"><a href=\"#4-4-7-字数统计\" class=\"headerlink\" title=\"4.4.7 字数统计\"></a>4.4.7 字数统计</h4><p>安装插件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wordcount字数统计插件</span><br><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<p>配置以下字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wordcount:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  post_wordcount: true</span><br><span class=\"line\">  min2read: true</span><br><span class=\"line\">  total_wordcount: true</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-8-分析统计\"><a href=\"#4-4-8-分析统计\" class=\"headerlink\" title=\"4.4.8 分析统计\"></a>4.4.8 分析统计</h4><ul>\n<li>以百度统计为例</li>\n<li>登录百度统计官网管理后台，使用设置-&gt;账户设置-&gt;网站列表-&gt;新增网站</li>\n<li>复制应用的统计代码中的key到配置中的baidu_analytics字段<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 填写百度统计代码的key（形如“  hm.src = &quot;https://hm.baidu.com/hm.js?28e4ea7748d7403e4bf35f897a5e67e0&quot;;）</span><br><span class=\"line\">baidu_analytics: </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"4-4-9-中文字和半形的英文、数字、符号之间插入空白\"><a href=\"#4-4-9-中文字和半形的英文、数字、符号之间插入空白\" class=\"headerlink\" title=\"4.4.9 中文字和半形的英文、数字、符号之间插入空白\"></a>4.4.9 中文字和半形的英文、数字、符号之间插入空白</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># https://github.com/vinta/pangu.js</span><br><span class=\"line\"># Insert a space between Chinese character and English character (中英文之間添加空格)</span><br><span class=\"line\">pangu:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  field: post # site/post</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-4-10-图片压缩\"><a href=\"#4-4-10-图片压缩\" class=\"headerlink\" title=\"4.4.10 图片压缩\"></a>4.4.10 图片压缩</h4><p>Butterfly主题需要使用到很多图片。如果图片太大，会严重拖慢网站的加载速度，以下是常用压缩工具</p>\n<ul>\n<li><a href=\"https://tinypng.com/\">tinypng</a></li>\n<li>caesium</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>一通操作下来，相信你的博客样式已经变得称心如意了，但是优化还远不止如此，如果觉得username.github.io格调不够高可以绑定自己的域名；如果想在搜索引擎更容易搜索到自己的博客需要做SEO优化；如果图片越来越多需要优化加载速度就需要使用图床来管理图片。<br>以上~</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>[1]. Hexo : <a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a><br>[2]. Butterfly : <a href=\"https://butterfly.js.org/\">https://butterfly.js.org/</a><br>[3]. Valine : <a href=\"https://valine.js.org/quickstart.html\">https://valine.js.org/quickstart.html</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clqc6duq70009tgka052v4928","category_id":"clqc6duq30004tgkadqozc3xy","_id":"clqc6duq9000dtgkabbc872am"},{"post_id":"clqc6dupy0001tgkadosbdrbd","category_id":"clqc6duq30004tgkadqozc3xy","_id":"clqc6duq9000etgkahs4z5ndo"},{"post_id":"clqc6duq20003tgka68lwh56g","category_id":"clqc6duq30004tgkadqozc3xy","_id":"clqc6duqa000gtgkafajjanq5"}],"PostTag":[{"post_id":"clqc6duq20003tgka68lwh56g","tag_id":"clqc6duq60007tgkafje73954","_id":"clqc6duq9000ctgka2udq9lzw"},{"post_id":"clqc6duq70009tgka052v4928","tag_id":"clqc6duq60007tgkafje73954","_id":"clqc6duqa000ftgkacdld1l7i"}],"Tag":[{"name":"Hexo","_id":"clqc6duq60007tgkafje73954"}]}}